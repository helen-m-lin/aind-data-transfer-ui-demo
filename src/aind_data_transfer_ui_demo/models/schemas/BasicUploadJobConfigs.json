{
   "$defs": {
      "AWSS3Source": {
         "properties": {
            "bucket": {
               "title": "Bucket",
               "type": "string"
            },
            "prefix": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Prefix"
            },
            "keep_on_external_storage": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Keep On External Storage"
            },
            "public": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Public"
            }
         },
         "required": [
            "bucket"
         ],
         "title": "AWSS3Source",
         "type": "object"
      },
      "AWSS3Target": {
         "properties": {
            "bucket": {
               "title": "Bucket",
               "type": "string"
            },
            "prefix": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Prefix"
            }
         },
         "required": [
            "bucket"
         ],
         "title": "AWSS3Target",
         "type": "object"
      },
      "AcquisitionSettings": {
         "additionalProperties": true,
         "description": "Fields needed to retrieve acquisition metadata",
         "properties": {
            "job_settings": {
               "$ref": "#/$defs/aind_metadata_mapper__smartspim__models__JobSettings"
            }
         },
         "required": [
            "job_settings"
         ],
         "title": "AcquisitionSettings",
         "type": "object"
      },
      "CaptureSettings": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Name"
            },
            "tags": {
               "items": {
                  "type": "string"
               },
               "title": "Tags",
               "type": "array"
            },
            "mount": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Mount"
            },
            "description": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Description"
            },
            "source": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Source",
               "type": "null"
            },
            "target": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Target"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "custom_metadata": {
               "anyOf": [
                  {
                     "type": "object"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Custom Metadata"
            },
            "data_asset_ids": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Data Asset Ids"
            },
            "results_info": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/ResultsInfo"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "data_description_file_name": {
               "const": "data_description.json",
               "default": "data_description.json",
               "description": "Attempt to create data asset name from this file. We might import this from the aind-data-schema package directly in future releases.",
               "enum": [
                  "data_description.json"
               ],
               "title": "Data Description File Name",
               "type": "string"
            },
            "process_name_suffix": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "processed",
               "title": "Process Name Suffix"
            },
            "process_name_suffix_tz": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "UTC",
               "title": "Process Name Suffix Tz"
            },
            "permissions": {
               "$ref": "#/$defs/Permissions",
               "default": {
                  "users": null,
                  "groups": null,
                  "everyone": "viewer",
                  "share_assets": null
               },
               "description": "Permissions to assign to capture result."
            }
         },
         "required": [
            "tags"
         ],
         "title": "CaptureSettings",
         "type": "object"
      },
      "CodeOceanPipelineMonitorConfigs": {
         "additionalProperties": true,
         "description": "Configs for handling registering data to Code Ocean and requesting\nCode Ocean pipelines to run on the newly registered data. The transfer\nservice will provide defaults, but users can customize these settings if\nthey wish.",
         "properties": {
            "capture_results_to_default_bucket": {
               "default": true,
               "description": "If set to True, then the results from each pipeline_monitor_capsule_settings pipeline will be captured to a default bucket. Set this to False to not modify the capture settings.",
               "title": "Capture Results To Default Bucket",
               "type": "boolean"
            },
            "job_type": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Legacy field that may be deprecated in the future. Determines which default processing pipeline(s) will be run in Code Ocean. A list will be made available in the transfer service UI. If None, then platform abbreviation will be used.",
               "title": "Job Type"
            },
            "pipeline_monitor_capsule_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If set to None, then default will be used. If set to an empty string, then no request will be sent. If set to a non-empty string, will use the user provided value.",
               "title": "Pipeline Monitor Capsule Id"
            },
            "pipeline_monitor_capsule_settings": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/PipelineMonitorSettings"
                     },
                     "maxItems": 5,
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If set to None, then defaults for job_type will be used. If set to an empty list, then no request will be sent. If set to a non-empty list, will use the user provided values and will not use any defaults. A max of 5 pipelines can be requested. Please talk to an admin if more are needed.",
               "title": "Pipeline Monitor Capsule Settings"
            },
            "register_data_settings": {
               "$ref": "#/$defs/DataAssetParams",
               "default": {
                  "name": "",
                  "tags": [
                     "raw"
                  ],
                  "mount": "",
                  "description": null,
                  "source": null,
                  "target": null,
                  "custom_metadata": {
                     "data level": "raw"
                  },
                  "data_asset_ids": null,
                  "results_info": null
               },
               "description": "If empty strings, then the name and mount will be set to the s3_prefix automatically by a validator. A validator will also automatically set the source. A validator will also add the subject_id and platform to the tags and custom_metadata."
            }
         },
         "title": "CodeOceanPipelineMonitorConfigs",
         "type": "object"
      },
      "ComputationSource": {
         "properties": {
            "id": {
               "title": "Id",
               "type": "string"
            },
            "path": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Path"
            }
         },
         "required": [
            "id"
         ],
         "title": "ComputationSource",
         "type": "object"
      },
      "DataAssetParams": {
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "tags": {
               "items": {
                  "type": "string"
               },
               "title": "Tags",
               "type": "array"
            },
            "mount": {
               "title": "Mount",
               "type": "string"
            },
            "description": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Description"
            },
            "source": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Source"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "target": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Target"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "custom_metadata": {
               "anyOf": [
                  {
                     "type": "object"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Custom Metadata"
            },
            "data_asset_ids": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Data Asset Ids"
            },
            "results_info": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/ResultsInfo"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            }
         },
         "required": [
            "name",
            "tags",
            "mount"
         ],
         "title": "DataAssetParams",
         "type": "object"
      },
      "DataAssetsRunParam": {
         "properties": {
            "id": {
               "title": "Id",
               "type": "string"
            },
            "mount": {
               "title": "Mount",
               "type": "string"
            }
         },
         "required": [
            "id",
            "mount"
         ],
         "title": "DataAssetsRunParam",
         "type": "object"
      },
      "EmailNotificationType": {
         "description": "Types of email notifications a user can select",
         "enum": [
            "begin",
            "end",
            "fail",
            "retry",
            "all"
         ],
         "title": "EmailNotificationType",
         "type": "string"
      },
      "EveryoneRole": {
         "enum": [
            "viewer",
            "discoverable",
            "none"
         ],
         "title": "EveryoneRole",
         "type": "string"
      },
      "GCPCloudStorageSource": {
         "properties": {
            "bucket": {
               "title": "Bucket",
               "type": "string"
            },
            "client_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Client Id"
            },
            "client_secret": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Client Secret"
            },
            "prefix": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Prefix"
            }
         },
         "required": [
            "bucket"
         ],
         "title": "GCPCloudStorageSource",
         "type": "object"
      },
      "GroupPermissions": {
         "properties": {
            "group": {
               "title": "Group",
               "type": "string"
            },
            "role": {
               "$ref": "#/$defs/GroupRole"
            }
         },
         "required": [
            "group",
            "role"
         ],
         "title": "GroupPermissions",
         "type": "object"
      },
      "GroupRole": {
         "enum": [
            "owner",
            "editor",
            "viewer",
            "discoverable"
         ],
         "title": "GroupRole",
         "type": "string"
      },
      "MetadataSettings": {
         "additionalProperties": true,
         "description": "Fields needed to retrieve main Metadata",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "location": {
               "title": "Location",
               "type": "string"
            },
            "subject_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Subject Filepath"
            },
            "data_description_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Data Description Filepath"
            },
            "procedures_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Procedures Filepath"
            },
            "session_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Session Filepath"
            },
            "rig_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rig Filepath"
            },
            "processing_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Processing Filepath"
            },
            "acquisition_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Acquisition Filepath"
            },
            "instrument_filepath": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Instrument Filepath"
            }
         },
         "required": [
            "name",
            "location"
         ],
         "title": "MetadataSettings",
         "type": "object"
      },
      "ModalityConfigs": {
         "additionalProperties": true,
         "description": "Class to contain configs for each modality type",
         "properties": {
            "modality": {
               "description": "Data collection modality",
               "discriminator": {
                  "mapping": {
                     "EMG": "#/$defs/_Emg",
                     "ISI": "#/$defs/aind_data_schema_models__modalities___Isi",
                     "MRI": "#/$defs/aind_data_schema_models__modalities___Mri",
                     "SPIM": "#/$defs/_Spim",
                     "behavior": "#/$defs/aind_data_schema_models__modalities___Behavior",
                     "behavior-videos": "#/$defs/_Behavior_Videos",
                     "confocal": "#/$defs/aind_data_schema_models__modalities___Confocal",
                     "ecephys": "#/$defs/aind_data_schema_models__modalities___Ecephys",
                     "fMOST": "#/$defs/_Fmost",
                     "fib": "#/$defs/_Fib",
                     "icephys": "#/$defs/_Icephys",
                     "merfish": "#/$defs/aind_data_schema_models__modalities___Merfish",
                     "pophys": "#/$defs/_Pophys",
                     "slap": "#/$defs/_Slap"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__modalities___Behavior"
                  },
                  {
                     "$ref": "#/$defs/_Behavior_Videos"
                  },
                  {
                     "$ref": "#/$defs/aind_data_schema_models__modalities___Confocal"
                  },
                  {
                     "$ref": "#/$defs/_Emg"
                  },
                  {
                     "$ref": "#/$defs/aind_data_schema_models__modalities___Ecephys"
                  },
                  {
                     "$ref": "#/$defs/_Fib"
                  },
                  {
                     "$ref": "#/$defs/_Fmost"
                  },
                  {
                     "$ref": "#/$defs/_Icephys"
                  },
                  {
                     "$ref": "#/$defs/aind_data_schema_models__modalities___Isi"
                  },
                  {
                     "$ref": "#/$defs/aind_data_schema_models__modalities___Mri"
                  },
                  {
                     "$ref": "#/$defs/aind_data_schema_models__modalities___Merfish"
                  },
                  {
                     "$ref": "#/$defs/_Pophys"
                  },
                  {
                     "$ref": "#/$defs/_Slap"
                  },
                  {
                     "$ref": "#/$defs/_Spim"
                  }
               ],
               "title": "Modality"
            },
            "source": {
               "description": "Location of raw data to be uploaded",
               "format": "path",
               "title": "Data Source",
               "type": "string"
            },
            "compress_raw_data": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Run compression on data",
               "title": "Compress Raw Data"
            },
            "extra_configs": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location of additional configuration file for compression job.",
               "title": "Extra Configs"
            },
            "job_settings": {
               "anyOf": [
                  {
                     "type": "object"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Configs to pass into modality compression job. Must be json serializable.",
               "title": "Job Settings"
            },
            "slurm_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/V0036JobProperties"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Custom slurm job properties. `environment` is a required field. Please set it to an empty dictionary. A downstream process will overwrite it.",
               "title": "Slurm Settings"
            }
         },
         "required": [
            "modality",
            "source"
         ],
         "title": "ModalityConfigs",
         "type": "object"
      },
      "NamedRunParam": {
         "properties": {
            "param_name": {
               "title": "Param Name",
               "type": "string"
            },
            "value": {
               "title": "Value",
               "type": "string"
            }
         },
         "required": [
            "param_name",
            "value"
         ],
         "title": "NamedRunParam",
         "type": "object"
      },
      "Param": {
         "properties": {
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Name"
            },
            "param_name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Param Name"
            },
            "value": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Value"
            }
         },
         "title": "Param",
         "type": "object"
      },
      "Permissions": {
         "properties": {
            "users": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/UserPermissions"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Users"
            },
            "groups": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/GroupPermissions"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Groups"
            },
            "everyone": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/EveryoneRole"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "share_assets": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Share Assets"
            }
         },
         "title": "Permissions",
         "type": "object"
      },
      "PipelineMonitorSettings": {
         "additionalProperties": false,
         "description": "Settings to start a pipeline, monitor it, and capture the results when\nfinished.",
         "properties": {
            "alert_url": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "URL to send alerts to an MS Teams channel. If None, no alert will be sent.",
               "title": "Alert Url"
            },
            "computation_polling_interval": {
               "default": 180,
               "description": "Time in seconds in between checks that the pipeline is finished.",
               "gte": 5,
               "title": "Computation Polling Interval",
               "type": "number"
            },
            "computation_timeout": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optional timeout in seconds. If timeout exceeds, will terminate pipeline run and raise an error. Set to None to wait indefinitely.",
               "title": "Computation Timeout"
            },
            "data_asset_ready_polling_interval": {
               "default": 10,
               "description": "Time in seconds in between checks that the captured data asset is ready.",
               "gte": 5,
               "title": "Data Asset Ready Polling Interval",
               "type": "number"
            },
            "data_asset_ready_timeout": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optional timeout in seconds. If timeout exceeds, will raise an error. Set to None to wait indefinitely.",
               "title": "Data Asset Ready Timeout"
            },
            "run_params": {
               "$ref": "#/$defs/RunParams",
               "description": "Parameters for running a pipeline"
            },
            "capture_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CaptureSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optional field for capturing the results as an asset. If None, then will not capture results."
            }
         },
         "required": [
            "run_params"
         ],
         "title": "PipelineMonitorSettings",
         "type": "object"
      },
      "PipelineProcess": {
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "capsule_id": {
               "title": "Capsule Id",
               "type": "string"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Version"
            },
            "public": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Public"
            },
            "parameters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/Param"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Parameters"
            }
         },
         "required": [
            "name",
            "capsule_id"
         ],
         "title": "PipelineProcess",
         "type": "object"
      },
      "PipelineProcessParams": {
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "parameters": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Parameters"
            },
            "named_parameters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/NamedRunParam"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Named Parameters"
            }
         },
         "required": [
            "name"
         ],
         "title": "PipelineProcessParams",
         "type": "object"
      },
      "ProceduresSettings": {
         "additionalProperties": true,
         "description": "Fields needed to retrieve procedures metadata",
         "properties": {
            "subject_id": {
               "title": "Subject Id",
               "type": "string"
            },
            "metadata_service_path": {
               "default": "procedures",
               "title": "Metadata Service Path",
               "type": "string"
            }
         },
         "required": [
            "subject_id"
         ],
         "title": "ProceduresSettings",
         "type": "object"
      },
      "ProcessingSettings": {
         "additionalProperties": true,
         "description": "Fields needed to retrieve processing metadata",
         "properties": {
            "pipeline_process": {
               "description": "Pipeline processes as a dict object. Will be converted to PipelineProcess model downstream.",
               "title": "Pipeline Process",
               "type": "object"
            }
         },
         "required": [
            "pipeline_process"
         ],
         "title": "ProcessingSettings",
         "type": "object"
      },
      "RawDataDescriptionSettings": {
         "additionalProperties": true,
         "description": "Fields needed to retrieve data description metadata",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "project_name": {
               "title": "Project Name",
               "type": "string"
            },
            "modality": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "EMG": "#/$defs/_Emg",
                        "ISI": "#/$defs/aind_data_schema_models__modalities___Isi",
                        "MRI": "#/$defs/aind_data_schema_models__modalities___Mri",
                        "SPIM": "#/$defs/_Spim",
                        "behavior": "#/$defs/aind_data_schema_models__modalities___Behavior",
                        "behavior-videos": "#/$defs/_Behavior_Videos",
                        "confocal": "#/$defs/aind_data_schema_models__modalities___Confocal",
                        "ecephys": "#/$defs/aind_data_schema_models__modalities___Ecephys",
                        "fMOST": "#/$defs/_Fmost",
                        "fib": "#/$defs/_Fib",
                        "icephys": "#/$defs/_Icephys",
                        "merfish": "#/$defs/aind_data_schema_models__modalities___Merfish",
                        "pophys": "#/$defs/_Pophys",
                        "slap": "#/$defs/_Slap"
                     },
                     "propertyName": "abbreviation"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/aind_data_schema_models__modalities___Behavior"
                     },
                     {
                        "$ref": "#/$defs/_Behavior_Videos"
                     },
                     {
                        "$ref": "#/$defs/aind_data_schema_models__modalities___Confocal"
                     },
                     {
                        "$ref": "#/$defs/_Emg"
                     },
                     {
                        "$ref": "#/$defs/aind_data_schema_models__modalities___Ecephys"
                     },
                     {
                        "$ref": "#/$defs/_Fib"
                     },
                     {
                        "$ref": "#/$defs/_Fmost"
                     },
                     {
                        "$ref": "#/$defs/_Icephys"
                     },
                     {
                        "$ref": "#/$defs/aind_data_schema_models__modalities___Isi"
                     },
                     {
                        "$ref": "#/$defs/aind_data_schema_models__modalities___Mri"
                     },
                     {
                        "$ref": "#/$defs/aind_data_schema_models__modalities___Merfish"
                     },
                     {
                        "$ref": "#/$defs/_Pophys"
                     },
                     {
                        "$ref": "#/$defs/_Slap"
                     },
                     {
                        "$ref": "#/$defs/_Spim"
                     }
                  ]
               },
               "title": "Modality",
               "type": "array"
            },
            "institution": {
               "anyOf": [
                  {
                     "discriminator": {
                        "mapping": {
                           "AA Opto Electronic": "#/$defs/_Aa_Opto_Electronic",
                           "ASUS": "#/$defs/_Asus",
                           "Abcam": "#/$defs/_Abcam",
                           "Addgene": "#/$defs/aind_data_schema_models__organizations___Addgene",
                           "Ailipu Technology Co": "#/$defs/_Ailipu_Technology_Co",
                           "Allen Institute": "#/$defs/_Allen_Institute",
                           "Allen Institute for Brain Science": "#/$defs/_Allen_Institute_For_Brain_Science",
                           "Allen Institute for Neural Dynamics": "#/$defs/_Allen_Institute_For_Neural_Dynamics",
                           "Allied": "#/$defs/_Allied",
                           "Applied Scientific Instrumentation": "#/$defs/_Applied_Scientific_Instrumentation",
                           "Arecont Vision Costar": "#/$defs/_Arecont_Vision_Costar",
                           "Basler": "#/$defs/_Basler",
                           "Cambridge Technology": "#/$defs/_Cambridge_Technology",
                           "Carl Zeiss": "#/$defs/_Carl_Zeiss",
                           "Champalimaud Foundation": "#/$defs/_Champalimaud_Foundation",
                           "Chan Zuckerberg Initiative": "#/$defs/_Chan_Zuckerberg_Initiative",
                           "Chroma": "#/$defs/_Chroma",
                           "Coherent Scientific": "#/$defs/_Coherent_Scientific",
                           "Columbia University": "#/$defs/_Columbia_University",
                           "Computar": "#/$defs/_Computar",
                           "Conoptics": "#/$defs/_Conoptics",
                           "Custom": "#/$defs/_Custom",
                           "Dodotronic": "#/$defs/_Dodotronic",
                           "Doric": "#/$defs/_Doric",
                           "Ealing": "#/$defs/_Ealing",
                           "Edmund Optics": "#/$defs/_Edmund_Optics",
                           "Emory University": "#/$defs/_Emory_University",
                           "Euresys": "#/$defs/_Euresys",
                           "Fujinon": "#/$defs/_Fujinon",
                           "Hamamatsu": "#/$defs/_Hamamatsu",
                           "Hamilton": "#/$defs/_Hamilton",
                           "Huazhong University of Science and Technology": "#/$defs/_Huazhong_University_Of_Science_And_Technology",
                           "IR Robot Co": "#/$defs/_Ir_Robot_Co",
                           "ISL Products International": "#/$defs/_Isl_Products_International",
                           "Infinity Photo-Optical": "#/$defs/_Infinity_Photo_Optical",
                           "Integrated DNA Technologies": "#/$defs/_Integrated_Dna_Technologies",
                           "Interuniversity Microelectronics Center": "#/$defs/_Interuniversity_Microelectronics_Center",
                           "Invitrogen": "#/$defs/_Invitrogen",
                           "Jackson Laboratory": "#/$defs/_Jackson_Laboratory",
                           "Janelia Research Campus": "#/$defs/_Janelia_Research_Campus",
                           "Julabo": "#/$defs/_Julabo",
                           "LG": "#/$defs/_Lg",
                           "Leica": "#/$defs/_Leica",
                           "LifeCanvas": "#/$defs/_Lifecanvas",
                           "Lumen Dynamics": "#/$defs/_Lumen_Dynamics",
                           "MBF Bioscience": "#/$defs/_Mbf_Bioscience",
                           "MKS Newport": "#/$defs/_Mks_Newport",
                           "MPI": "#/$defs/_Mpi",
                           "Meadowlark Optics": "#/$defs/_Meadowlark_Optics",
                           "Michael J. Fox Foundation for Parkinson's Research": "#/$defs/_Michael_J_Fox_Foundation_For_Parkinson_S_Research",
                           "Midwest Optical Systems, Inc.": "#/$defs/_Midwest_Optical_Systems_Inc_",
                           "Mitutuyo": "#/$defs/_Mitutuyo",
                           "NResearch Inc": "#/$defs/_Nresearch_Inc",
                           "National Center for Complementary and Integrative Health": "#/$defs/_National_Center_For_Complementary_And_Integrative_Health",
                           "National Institute of Mental Health": "#/$defs/_National_Institute_Of_Mental_Health",
                           "National Institute of Neurological Disorders and Stroke": "#/$defs/_National_Institute_Of_Neurological_Disorders_And_Stroke",
                           "National Instruments": "#/$defs/_National_Instruments",
                           "Navitar": "#/$defs/_Navitar",
                           "Neurophotometrics": "#/$defs/_Neurophotometrics",
                           "New Scale Technologies": "#/$defs/_New_Scale_Technologies",
                           "New York University": "#/$defs/_New_York_University",
                           "Nikon": "#/$defs/_Nikon",
                           "Olympus": "#/$defs/_Olympus",
                           "Open Ephys Production Site": "#/$defs/_Open_Ephys_Production_Site",
                           "Optotune": "#/$defs/_Optotune",
                           "Other": "#/$defs/_Other",
                           "Oxxius": "#/$defs/_Oxxius",
                           "Prizmatix": "#/$defs/_Prizmatix",
                           "Quantifi": "#/$defs/_Quantifi",
                           "Raspberry Pi": "#/$defs/_Raspberry_Pi",
                           "SICGEN": "#/$defs/_Sicgen",
                           "Schneider-Kreuznach": "#/$defs/_Schneider_Kreuznach",
                           "Second Order Effects": "#/$defs/_Second_Order_Effects",
                           "Semrock": "#/$defs/_Semrock",
                           "Sigma-Aldrich": "#/$defs/_Sigma_Aldrich",
                           "Simons Foundation": "#/$defs/_Simons_Foundation",
                           "Spinnaker": "#/$defs/_Spinnaker",
                           "Tamron": "#/$defs/_Tamron",
                           "Technical Manufacturing Corporation": "#/$defs/_Technical_Manufacturing_Corporation",
                           "Teledyne FLIR": "#/$defs/_Teledyne_Flir",
                           "Templeton World Charity Foundation": "#/$defs/_Templeton_World_Charity_Foundation",
                           "The Imaging Source": "#/$defs/_The_Imaging_Source",
                           "The Lee Company": "#/$defs/_The_Lee_Company",
                           "Thermo Fisher Scientific": "#/$defs/_Thermo_Fisher_Scientific",
                           "Thorlabs": "#/$defs/_Thorlabs",
                           "Tymphany": "#/$defs/_Tymphany",
                           "Vieworks": "#/$defs/_Vieworks",
                           "Vortran": "#/$defs/_Vortran",
                           "ams OSRAM": "#/$defs/_Ams_Osram"
                        },
                        "propertyName": "name"
                     },
                     "oneOf": [
                        {
                           "$ref": "#/$defs/_Aa_Opto_Electronic"
                        },
                        {
                           "$ref": "#/$defs/_Asus"
                        },
                        {
                           "$ref": "#/$defs/_Abcam"
                        },
                        {
                           "$ref": "#/$defs/aind_data_schema_models__organizations___Addgene"
                        },
                        {
                           "$ref": "#/$defs/_Ailipu_Technology_Co"
                        },
                        {
                           "$ref": "#/$defs/_Allen_Institute"
                        },
                        {
                           "$ref": "#/$defs/_Allen_Institute_For_Brain_Science"
                        },
                        {
                           "$ref": "#/$defs/_Allen_Institute_For_Neural_Dynamics"
                        },
                        {
                           "$ref": "#/$defs/_Allied"
                        },
                        {
                           "$ref": "#/$defs/_Applied_Scientific_Instrumentation"
                        },
                        {
                           "$ref": "#/$defs/_Arecont_Vision_Costar"
                        },
                        {
                           "$ref": "#/$defs/_Basler"
                        },
                        {
                           "$ref": "#/$defs/_Cambridge_Technology"
                        },
                        {
                           "$ref": "#/$defs/_Carl_Zeiss"
                        },
                        {
                           "$ref": "#/$defs/_Champalimaud_Foundation"
                        },
                        {
                           "$ref": "#/$defs/_Chan_Zuckerberg_Initiative"
                        },
                        {
                           "$ref": "#/$defs/_Chroma"
                        },
                        {
                           "$ref": "#/$defs/_Coherent_Scientific"
                        },
                        {
                           "$ref": "#/$defs/_Columbia_University"
                        },
                        {
                           "$ref": "#/$defs/_Computar"
                        },
                        {
                           "$ref": "#/$defs/_Conoptics"
                        },
                        {
                           "$ref": "#/$defs/_Custom"
                        },
                        {
                           "$ref": "#/$defs/_Dodotronic"
                        },
                        {
                           "$ref": "#/$defs/_Doric"
                        },
                        {
                           "$ref": "#/$defs/_Ealing"
                        },
                        {
                           "$ref": "#/$defs/_Edmund_Optics"
                        },
                        {
                           "$ref": "#/$defs/_Emory_University"
                        },
                        {
                           "$ref": "#/$defs/_Euresys"
                        },
                        {
                           "$ref": "#/$defs/_Fujinon"
                        },
                        {
                           "$ref": "#/$defs/_Hamamatsu"
                        },
                        {
                           "$ref": "#/$defs/_Hamilton"
                        },
                        {
                           "$ref": "#/$defs/_Huazhong_University_Of_Science_And_Technology"
                        },
                        {
                           "$ref": "#/$defs/_Ir_Robot_Co"
                        },
                        {
                           "$ref": "#/$defs/_Isl_Products_International"
                        },
                        {
                           "$ref": "#/$defs/_Infinity_Photo_Optical"
                        },
                        {
                           "$ref": "#/$defs/_Integrated_Dna_Technologies"
                        },
                        {
                           "$ref": "#/$defs/_Interuniversity_Microelectronics_Center"
                        },
                        {
                           "$ref": "#/$defs/_Invitrogen"
                        },
                        {
                           "$ref": "#/$defs/_Jackson_Laboratory"
                        },
                        {
                           "$ref": "#/$defs/_Janelia_Research_Campus"
                        },
                        {
                           "$ref": "#/$defs/_Julabo"
                        },
                        {
                           "$ref": "#/$defs/_Lg"
                        },
                        {
                           "$ref": "#/$defs/_Leica"
                        },
                        {
                           "$ref": "#/$defs/_Lumen_Dynamics"
                        },
                        {
                           "$ref": "#/$defs/_Lifecanvas"
                        },
                        {
                           "$ref": "#/$defs/_Mbf_Bioscience"
                        },
                        {
                           "$ref": "#/$defs/_Mks_Newport"
                        },
                        {
                           "$ref": "#/$defs/_Mpi"
                        },
                        {
                           "$ref": "#/$defs/_Meadowlark_Optics"
                        },
                        {
                           "$ref": "#/$defs/_Michael_J_Fox_Foundation_For_Parkinson_S_Research"
                        },
                        {
                           "$ref": "#/$defs/_Midwest_Optical_Systems_Inc_"
                        },
                        {
                           "$ref": "#/$defs/_Mitutuyo"
                        },
                        {
                           "$ref": "#/$defs/_Nresearch_Inc"
                        },
                        {
                           "$ref": "#/$defs/_National_Center_For_Complementary_And_Integrative_Health"
                        },
                        {
                           "$ref": "#/$defs/_National_Institute_Of_Mental_Health"
                        },
                        {
                           "$ref": "#/$defs/_National_Institute_Of_Neurological_Disorders_And_Stroke"
                        },
                        {
                           "$ref": "#/$defs/_National_Instruments"
                        },
                        {
                           "$ref": "#/$defs/_Navitar"
                        },
                        {
                           "$ref": "#/$defs/_Neurophotometrics"
                        },
                        {
                           "$ref": "#/$defs/_New_Scale_Technologies"
                        },
                        {
                           "$ref": "#/$defs/_New_York_University"
                        },
                        {
                           "$ref": "#/$defs/_Nikon"
                        },
                        {
                           "$ref": "#/$defs/_Olympus"
                        },
                        {
                           "$ref": "#/$defs/_Open_Ephys_Production_Site"
                        },
                        {
                           "$ref": "#/$defs/_Optotune"
                        },
                        {
                           "$ref": "#/$defs/_Other"
                        },
                        {
                           "$ref": "#/$defs/_Oxxius"
                        },
                        {
                           "$ref": "#/$defs/_Prizmatix"
                        },
                        {
                           "$ref": "#/$defs/_Quantifi"
                        },
                        {
                           "$ref": "#/$defs/_Raspberry_Pi"
                        },
                        {
                           "$ref": "#/$defs/_Sicgen"
                        },
                        {
                           "$ref": "#/$defs/_Schneider_Kreuznach"
                        },
                        {
                           "$ref": "#/$defs/_Second_Order_Effects"
                        },
                        {
                           "$ref": "#/$defs/_Semrock"
                        },
                        {
                           "$ref": "#/$defs/_Sigma_Aldrich"
                        },
                        {
                           "$ref": "#/$defs/_Simons_Foundation"
                        },
                        {
                           "$ref": "#/$defs/_Spinnaker"
                        },
                        {
                           "$ref": "#/$defs/_Tamron"
                        },
                        {
                           "$ref": "#/$defs/_Technical_Manufacturing_Corporation"
                        },
                        {
                           "$ref": "#/$defs/_Teledyne_Flir"
                        },
                        {
                           "$ref": "#/$defs/_Templeton_World_Charity_Foundation"
                        },
                        {
                           "$ref": "#/$defs/_The_Imaging_Source"
                        },
                        {
                           "$ref": "#/$defs/_The_Lee_Company"
                        },
                        {
                           "$ref": "#/$defs/_Thermo_Fisher_Scientific"
                        },
                        {
                           "$ref": "#/$defs/_Thorlabs"
                        },
                        {
                           "$ref": "#/$defs/_Tymphany"
                        },
                        {
                           "$ref": "#/$defs/_Vieworks"
                        },
                        {
                           "$ref": "#/$defs/_Vortran"
                        },
                        {
                           "$ref": "#/$defs/_Ams_Osram"
                        }
                     ]
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": {
                  "name": "Allen Institute for Neural Dynamics",
                  "abbreviation": "AIND",
                  "registry": {
                     "abbreviation": "ROR",
                     "name": "Research Organization Registry"
                  },
                  "registry_identifier": "04szwah67"
               },
               "title": "Institution"
            },
            "metadata_service_path": {
               "default": "funding",
               "title": "Metadata Service Path",
               "type": "string"
            }
         },
         "required": [
            "name",
            "project_name",
            "modality"
         ],
         "title": "RawDataDescriptionSettings",
         "type": "object"
      },
      "ResultsInfo": {
         "properties": {
            "capsule_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Capsule Id"
            },
            "pipeline_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Pipeline Id"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Version"
            },
            "commit": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Commit"
            },
            "run_script": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Run Script"
            },
            "data_assets": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Data Assets"
            },
            "parameters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/Param"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Parameters"
            },
            "processes": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/PipelineProcess"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Processes"
            }
         },
         "title": "ResultsInfo",
         "type": "object"
      },
      "RunParams": {
         "properties": {
            "capsule_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Capsule Id"
            },
            "pipeline_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Pipeline Id"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Version"
            },
            "resume_run_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Resume Run Id"
            },
            "data_assets": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DataAssetsRunParam"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Data Assets"
            },
            "parameters": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Parameters"
            },
            "named_parameters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/NamedRunParam"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Named Parameters"
            },
            "processes": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/PipelineProcessParams"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Processes"
            }
         },
         "title": "RunParams",
         "type": "object"
      },
      "SessionSettings": {
         "additionalProperties": true,
         "description": "Settings needed to retrieve session metadata",
         "properties": {
            "job_settings": {
               "discriminator": {
                  "mapping": {
                     "Bergamo": "#/$defs/aind_metadata_mapper__bergamo__models__JobSettings",
                     "Bruker": "#/$defs/aind_metadata_mapper__bruker__models__JobSettings",
                     "FIP": "#/$defs/aind_metadata_mapper__fip__models__JobSettings",
                     "Mesoscope": "#/$defs/aind_metadata_mapper__mesoscope__models__JobSettings"
                  },
                  "propertyName": "job_settings_name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_metadata_mapper__bergamo__models__JobSettings"
                  },
                  {
                     "$ref": "#/$defs/aind_metadata_mapper__bruker__models__JobSettings"
                  },
                  {
                     "$ref": "#/$defs/aind_metadata_mapper__fip__models__JobSettings"
                  },
                  {
                     "$ref": "#/$defs/aind_metadata_mapper__mesoscope__models__JobSettings"
                  }
               ],
               "title": "Job Settings"
            }
         },
         "required": [
            "job_settings"
         ],
         "title": "SessionSettings",
         "type": "object"
      },
      "Source": {
         "properties": {
            "aws": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/AWSS3Source"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "gcp": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/GCPCloudStorageSource"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "computation": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/ComputationSource"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            }
         },
         "title": "Source",
         "type": "object"
      },
      "SubjectSettings": {
         "additionalProperties": true,
         "description": "Fields needed to retrieve subject metadata",
         "properties": {
            "subject_id": {
               "title": "Subject Id",
               "type": "string"
            },
            "metadata_service_path": {
               "default": "subject",
               "title": "Metadata Service Path",
               "type": "string"
            }
         },
         "required": [
            "subject_id"
         ],
         "title": "SubjectSettings",
         "type": "object"
      },
      "Target": {
         "properties": {
            "aws": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/AWSS3Target"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            }
         },
         "title": "Target",
         "type": "object"
      },
      "TriggerConfigModel": {
         "additionalProperties": true,
         "description": "Config to be parsed by the AIND Trigger Capsule.",
         "properties": {
            "job_type": {
               "$ref": "#/$defs/ValidJobType",
               "description": "The type of job to be triggered."
            },
            "bucket": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The bucket where the data is stored.",
               "title": "Bucket"
            },
            "prefix": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The prefix where the data is stored.",
               "title": "Prefix"
            },
            "asset_name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The name of the asset.",
               "title": "Asset Name"
            },
            "mount": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The mount point for the data.",
               "title": "Mount"
            },
            "input_data_asset_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The ID of the input data asset. To attach multiple input data assets, use semicolon as a delimiter.",
               "title": "Input Data Asset Id"
            },
            "input_data_mount": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The mount point for the input data. If None, the input data mount will be the same as the data asset name. For multiple input data assets, use semicolon as a delimiter to specify the mount path for each input data asset.",
               "title": "Input Data Mount"
            },
            "process_capsule_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The ID of the process capsule. Ignored if job type is run_generic_pipeline.",
               "title": "Process Capsule Id"
            },
            "capsule_version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The version of the capsule.",
               "title": "Capsule Version"
            },
            "results_suffix": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "processed",
               "description": "The suffix to be added to the results.",
               "title": "Results Suffix"
            },
            "input_data_asset_name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The name to use as stem for the captured asset. It is required when multiple input data assets are attached.",
               "title": "Input Data Asset Name"
            },
            "output_bucket": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The bucket where the results will be stored.",
               "title": "Output Bucket"
            },
            "aind_data_transfer_version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "(deprecated) The version of the AIND Data Transfer Library.",
               "title": "Aind Data Transfer Version"
            },
            "modalities": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "EMG": "#/$defs/_Emg",
                              "ISI": "#/$defs/aind_data_schema_models__modalities___Isi",
                              "MRI": "#/$defs/aind_data_schema_models__modalities___Mri",
                              "SPIM": "#/$defs/_Spim",
                              "behavior": "#/$defs/aind_data_schema_models__modalities___Behavior",
                              "behavior-videos": "#/$defs/_Behavior_Videos",
                              "confocal": "#/$defs/aind_data_schema_models__modalities___Confocal",
                              "ecephys": "#/$defs/aind_data_schema_models__modalities___Ecephys",
                              "fMOST": "#/$defs/_Fmost",
                              "fib": "#/$defs/_Fib",
                              "icephys": "#/$defs/_Icephys",
                              "merfish": "#/$defs/aind_data_schema_models__modalities___Merfish",
                              "pophys": "#/$defs/_Pophys",
                              "slap": "#/$defs/_Slap"
                           },
                           "propertyName": "abbreviation"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/aind_data_schema_models__modalities___Behavior"
                           },
                           {
                              "$ref": "#/$defs/_Behavior_Videos"
                           },
                           {
                              "$ref": "#/$defs/aind_data_schema_models__modalities___Confocal"
                           },
                           {
                              "$ref": "#/$defs/_Emg"
                           },
                           {
                              "$ref": "#/$defs/aind_data_schema_models__modalities___Ecephys"
                           },
                           {
                              "$ref": "#/$defs/_Fib"
                           },
                           {
                              "$ref": "#/$defs/_Fmost"
                           },
                           {
                              "$ref": "#/$defs/_Icephys"
                           },
                           {
                              "$ref": "#/$defs/aind_data_schema_models__modalities___Isi"
                           },
                           {
                              "$ref": "#/$defs/aind_data_schema_models__modalities___Mri"
                           },
                           {
                              "$ref": "#/$defs/aind_data_schema_models__modalities___Merfish"
                           },
                           {
                              "$ref": "#/$defs/_Pophys"
                           },
                           {
                              "$ref": "#/$defs/_Slap"
                           },
                           {
                              "$ref": "#/$defs/_Spim"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "(deprecated - use 'job_type').",
               "title": "Modalities"
            },
            "capsule_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "(deprecated - use 'process_capsule_id'). The ID of the process capsule",
               "title": "Capsule Id"
            },
            "input_data_point": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "(deprecated - use 'input_data_mount'). The input data point.",
               "title": "Input Data Point"
            }
         },
         "required": [
            "job_type"
         ],
         "title": "TriggerConfigModel",
         "type": "object"
      },
      "UserPermissions": {
         "properties": {
            "email": {
               "title": "Email",
               "type": "string"
            },
            "role": {
               "$ref": "#/$defs/UserRole"
            }
         },
         "required": [
            "email",
            "role"
         ],
         "title": "UserPermissions",
         "type": "object"
      },
      "UserRole": {
         "enum": [
            "owner",
            "editor",
            "viewer"
         ],
         "title": "UserRole",
         "type": "string"
      },
      "V0036JobProperties": {
         "description": "V0036JobProperties",
         "properties": {
            "account": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Charge resources used by this job to specified account.",
               "title": "Account"
            },
            "account_gather_freqency": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Define the job accounting and profiling sampling intervals.",
               "title": "Account Gather Freqency"
            },
            "argv": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Arguments to the script.",
               "title": "Argv"
            },
            "array": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used.",
               "title": "Array"
            },
            "batch_features": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "features required for batch script's node",
               "title": "Batch Features"
            },
            "begin_time": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time.",
               "title": "Begin Time"
            },
            "burst_buffer": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Burst buffer specification.",
               "title": "Burst Buffer"
            },
            "cluster_constraints": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specifies features that a federated cluster must have to have a sibling job submitted to it.",
               "title": "Cluster Constraints"
            },
            "comment": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "An arbitrary comment.",
               "title": "Comment"
            },
            "constraints": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "node features required by job.",
               "title": "Constraints"
            },
            "core_specification": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application.",
               "title": "Core Specification"
            },
            "cores_per_socket": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Restrict node selection to nodes with at least the specified number of cores per socket.",
               "title": "Cores Per Socket"
            },
            "cpu_binding": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Cpu binding",
               "title": "Cpu Binding"
            },
            "cpu_binding_hint": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Cpu binding hint",
               "title": "Cpu Binding Hint"
            },
            "cpu_frequency": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s).",
               "title": "Cpu Frequency"
            },
            "cpus_per_gpu": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Number of CPUs requested per allocated GPU.",
               "title": "Cpus Per Gpu"
            },
            "cpus_per_task": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task.",
               "title": "Cpus Per Task"
            },
            "current_working_directory": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Instruct Slurm to connect the batch script's standard output directly to the file name.",
               "title": "Current Working Directory"
            },
            "deadline": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Remove the job if no ending is possible before this deadline (start > (deadline - time[-min])).",
               "title": "Deadline"
            },
            "delay_boot": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period.",
               "title": "Delay Boot"
            },
            "dependency": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Defer the start of this job until the specified dependencies have been satisfied completed.",
               "title": "Dependency"
            },
            "distribution": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specify alternate distribution methods for remote processes.",
               "title": "Distribution"
            },
            "environment": {
               "description": "Dictionary of environment entries.",
               "title": "Environment",
               "type": "object"
            },
            "exclusive": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "The job allocation can share nodes just other users with the \"user\" option or with the \"mcs\" option).",
               "title": "Exclusive"
            },
            "get_user_environment": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Load new login environment for user on job node.",
               "title": "Get User Environment"
            },
            "gres": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specifies a comma delimited list of generic consumable resources.",
               "title": "Gres"
            },
            "gres_flags": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specify generic resource task binding options.",
               "title": "Gres Flags"
            },
            "gpu_binding": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Requested binding of tasks to GPU.",
               "title": "Gpu Binding"
            },
            "gpu_frequency": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Requested GPU frequency.",
               "title": "Gpu Frequency"
            },
            "gpus": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "GPUs per job.",
               "title": "Gpus"
            },
            "gpus_per_node": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "GPUs per node.",
               "title": "Gpus Per Node"
            },
            "gpus_per_socket": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "GPUs per socket.",
               "title": "Gpus Per Socket"
            },
            "gpus_per_task": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "GPUs per task.",
               "title": "Gpus Per Task"
            },
            "hold": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specify the job is to be submitted in a held state (priority of zero).",
               "title": "Hold"
            },
            "kill_on_invalid_dependency": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If a job has an invalid dependency, then Slurm is to terminate it.",
               "title": "Kill On Invalid Dependency"
            },
            "licenses": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job.",
               "title": "Licenses"
            },
            "mail_type": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Notify user by email when certain event types occur.",
               "title": "Mail Type"
            },
            "mail_user": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "User to receive email notification of state changes as defined by mail_type.",
               "title": "Mail User"
            },
            "mcs_label": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "This parameter is a group among the groups of the user.",
               "title": "Mcs Label"
            },
            "memory_binding": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Bind tasks to memory.",
               "title": "Memory Binding"
            },
            "memory_per_cpu": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Minimum real memory per cpu (MB).",
               "title": "Memory Per Cpu"
            },
            "memory_per_gpu": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Minimum memory required per allocated GPU.",
               "title": "Memory Per Gpu"
            },
            "memory_per_node": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Minimum real memory per node (MB).",
               "title": "Memory Per Node"
            },
            "minimum_cpus_per_node": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Minimum number of CPUs per node.",
               "title": "Minimum Cpus Per Node"
            },
            "minimum_nodes": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If a range of node counts is given, prefer the smaller count.",
               "title": "Minimum Nodes"
            },
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specify a name for the job allocation.",
               "title": "Name"
            },
            "nice": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Run the job with an adjusted scheduling priority within Slurm.",
               "title": "Nice"
            },
            "no_kill": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Do not automatically terminate a job if one of the nodes it has been allocated fails.",
               "title": "No Kill"
            },
            "nodes": {
               "anyOf": [
                  {
                     "items": {
                        "type": "integer"
                     },
                     "maxItems": 2,
                     "minItems": 1,
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request that a minimum of minnodes nodes and a maximum node count.",
               "title": "Nodes"
            },
            "open_mode": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "append",
               "description": "Open the output and error files using append or truncate mode as specified.",
               "title": "Open Mode"
            },
            "partition": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request a specific partition for the resource allocation.",
               "title": "Partition"
            },
            "priority": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request a specific job priority.",
               "title": "Priority"
            },
            "qos": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request a quality of service for the job.",
               "title": "Qos"
            },
            "requeue": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specifies that the batch job should eligible to being requeue.",
               "title": "Requeue"
            },
            "reservation": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Allocate resources for the job from the named reservation.",
               "title": "Reservation"
            },
            "signal": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "When a job is within sig_time seconds of its end time, send it the signal sig_num.",
               "title": "Signal"
            },
            "sockets_per_node": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Restrict node selection to nodes with at least the specified number of sockets.",
               "title": "Sockets Per Node"
            },
            "spread_job": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes.",
               "title": "Spread Job"
            },
            "standard_error": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Instruct Slurm to connect the batch script's standard error directly to the file name.",
               "title": "Standard Error"
            },
            "standard_in": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Instruct Slurm to connect the batch script's standard input directly to the file name specified.",
               "title": "Standard In"
            },
            "standard_out": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Instruct Slurm to connect the batch script's standard output directly to the file name.",
               "title": "Standard Out"
            },
            "tasks": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources.",
               "title": "Tasks"
            },
            "tasks_per_core": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request the maximum ntasks be invoked on each core.",
               "title": "Tasks Per Core"
            },
            "tasks_per_node": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request the maximum ntasks be invoked on each node.",
               "title": "Tasks Per Node"
            },
            "tasks_per_socket": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Request the maximum ntasks be invoked on each socket.",
               "title": "Tasks Per Socket"
            },
            "thread_specification": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application.",
               "title": "Thread Specification"
            },
            "threads_per_core": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Restrict node selection to nodes with at least the specified number of threads per core.",
               "title": "Threads Per Core"
            },
            "time_limit": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Step time limit.",
               "title": "Time Limit"
            },
            "time_minimum": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Minimum run time in minutes.",
               "title": "Time Minimum"
            },
            "wait_all_nodes": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Do not begin execution until all nodes are ready for use.",
               "title": "Wait All Nodes"
            },
            "wckey": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Specify wckey to be used with job.",
               "title": "Wckey"
            }
         },
         "required": [
            "environment"
         ],
         "title": "V0036JobProperties",
         "type": "object"
      },
      "ValidJobType": {
         "description": "Valid job types for the AIND Trigger Capsule.",
         "enum": [
            "ecephys",
            "ecephys_opto",
            "singleplane_ophys",
            "multiplane_ophys",
            "smartspim",
            "run_generic_pipeline",
            "register_data",
            "test"
         ],
         "title": "ValidJobType",
         "type": "string"
      },
      "_Aa_Opto_Electronic": {
         "description": "Model AA Opto Electronic",
         "properties": {
            "name": {
               "const": "AA Opto Electronic",
               "default": "AA Opto Electronic",
               "enum": [
                  "AA Opto Electronic"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Aa_Opto_Electronic",
         "type": "object"
      },
      "_Abcam": {
         "description": "Model Abcam",
         "properties": {
            "name": {
               "const": "Abcam",
               "default": "Abcam",
               "enum": [
                  "Abcam"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02e1wjw63",
               "default": "02e1wjw63",
               "enum": [
                  "02e1wjw63"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Abcam",
         "type": "object"
      },
      "_Ailipu_Technology_Co": {
         "description": "Model Ailipu Technology Co",
         "properties": {
            "name": {
               "const": "Ailipu Technology Co",
               "default": "Ailipu Technology Co",
               "enum": [
                  "Ailipu Technology Co"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Ailipu",
               "default": "Ailipu",
               "enum": [
                  "Ailipu"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Ailipu_Technology_Co",
         "type": "object"
      },
      "_Allen_Institute": {
         "description": "Model Allen Institute",
         "properties": {
            "name": {
               "const": "Allen Institute",
               "default": "Allen Institute",
               "enum": [
                  "Allen Institute"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AI",
               "default": "AI",
               "enum": [
                  "AI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03cpe7c52",
               "default": "03cpe7c52",
               "enum": [
                  "03cpe7c52"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Allen_Institute",
         "type": "object"
      },
      "_Allen_Institute_For_Brain_Science": {
         "description": "Model Allen Institute for Brain Science",
         "properties": {
            "name": {
               "const": "Allen Institute for Brain Science",
               "default": "Allen Institute for Brain Science",
               "enum": [
                  "Allen Institute for Brain Science"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AIBS",
               "default": "AIBS",
               "enum": [
                  "AIBS"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00dcv1019",
               "default": "00dcv1019",
               "enum": [
                  "00dcv1019"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Allen_Institute_For_Brain_Science",
         "type": "object"
      },
      "_Allen_Institute_For_Neural_Dynamics": {
         "description": "Model Allen Institute for Neural Dynamics",
         "properties": {
            "name": {
               "const": "Allen Institute for Neural Dynamics",
               "default": "Allen Institute for Neural Dynamics",
               "enum": [
                  "Allen Institute for Neural Dynamics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AIND",
               "default": "AIND",
               "enum": [
                  "AIND"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "04szwah67",
               "default": "04szwah67",
               "enum": [
                  "04szwah67"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Allen_Institute_For_Neural_Dynamics",
         "type": "object"
      },
      "_Allied": {
         "description": "Model Allied",
         "properties": {
            "name": {
               "const": "Allied",
               "default": "Allied",
               "enum": [
                  "Allied"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Allied",
         "type": "object"
      },
      "_Ams_Osram": {
         "description": "Model ams OSRAM",
         "properties": {
            "name": {
               "const": "ams OSRAM",
               "default": "ams OSRAM",
               "enum": [
                  "ams OSRAM"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "045d0h266",
               "default": "045d0h266",
               "enum": [
                  "045d0h266"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Ams_Osram",
         "type": "object"
      },
      "_Applied_Scientific_Instrumentation": {
         "description": "Model Applied Scientific Instrumentation",
         "properties": {
            "name": {
               "const": "Applied Scientific Instrumentation",
               "default": "Applied Scientific Instrumentation",
               "enum": [
                  "Applied Scientific Instrumentation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ASI",
               "default": "ASI",
               "enum": [
                  "ASI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Applied_Scientific_Instrumentation",
         "type": "object"
      },
      "_Arecont_Vision_Costar": {
         "description": "Model Arecont Vision Costar",
         "properties": {
            "name": {
               "const": "Arecont Vision Costar",
               "default": "Arecont Vision Costar",
               "enum": [
                  "Arecont Vision Costar"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Arecont_Vision_Costar",
         "type": "object"
      },
      "_Asus": {
         "description": "Model ASUS",
         "properties": {
            "name": {
               "const": "ASUS",
               "default": "ASUS",
               "enum": [
                  "ASUS"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00bxkz165",
               "default": "00bxkz165",
               "enum": [
                  "00bxkz165"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Asus",
         "type": "object"
      },
      "_Basler": {
         "description": "Model Basler",
         "properties": {
            "name": {
               "const": "Basler",
               "default": "Basler",
               "enum": [
                  "Basler"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Basler",
         "type": "object"
      },
      "_Behavior_Videos": {
         "additionalProperties": false,
         "description": "Model behavior-videos",
         "properties": {
            "name": {
               "const": "Behavior videos",
               "default": "Behavior videos",
               "enum": [
                  "Behavior videos"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior-videos",
               "default": "behavior-videos",
               "enum": [
                  "behavior-videos"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Behavior_Videos",
         "type": "object"
      },
      "_Cambridge_Technology": {
         "description": "Model Cambridge Technology",
         "properties": {
            "name": {
               "const": "Cambridge Technology",
               "default": "Cambridge Technology",
               "enum": [
                  "Cambridge Technology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Cambridge_Technology",
         "type": "object"
      },
      "_Carl_Zeiss": {
         "description": "Model Carl Zeiss",
         "properties": {
            "name": {
               "const": "Carl Zeiss",
               "default": "Carl Zeiss",
               "enum": [
                  "Carl Zeiss"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01xk5xs43",
               "default": "01xk5xs43",
               "enum": [
                  "01xk5xs43"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Carl_Zeiss",
         "type": "object"
      },
      "_Champalimaud_Foundation": {
         "description": "Model Champalimaud Foundation",
         "properties": {
            "name": {
               "const": "Champalimaud Foundation",
               "default": "Champalimaud Foundation",
               "enum": [
                  "Champalimaud Foundation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Champalimaud",
               "default": "Champalimaud",
               "enum": [
                  "Champalimaud"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03g001n57",
               "default": "03g001n57",
               "enum": [
                  "03g001n57"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Champalimaud_Foundation",
         "type": "object"
      },
      "_Chan_Zuckerberg_Initiative": {
         "description": "Model Chan Zuckerberg Initiative",
         "properties": {
            "name": {
               "const": "Chan Zuckerberg Initiative",
               "default": "Chan Zuckerberg Initiative",
               "enum": [
                  "Chan Zuckerberg Initiative"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "CZI",
               "default": "CZI",
               "enum": [
                  "CZI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02qenvm24",
               "default": "02qenvm24",
               "enum": [
                  "02qenvm24"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Chan_Zuckerberg_Initiative",
         "type": "object"
      },
      "_Chroma": {
         "description": "Model Chroma",
         "properties": {
            "name": {
               "const": "Chroma",
               "default": "Chroma",
               "enum": [
                  "Chroma"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Chroma",
         "type": "object"
      },
      "_Coherent_Scientific": {
         "description": "Model Coherent Scientific",
         "properties": {
            "name": {
               "const": "Coherent Scientific",
               "default": "Coherent Scientific",
               "enum": [
                  "Coherent Scientific"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "031tysd23",
               "default": "031tysd23",
               "enum": [
                  "031tysd23"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Coherent_Scientific",
         "type": "object"
      },
      "_Columbia_University": {
         "description": "Model Columbia University",
         "properties": {
            "name": {
               "const": "Columbia University",
               "default": "Columbia University",
               "enum": [
                  "Columbia University"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Columbia",
               "default": "Columbia",
               "enum": [
                  "Columbia"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00hj8s172",
               "default": "00hj8s172",
               "enum": [
                  "00hj8s172"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Columbia_University",
         "type": "object"
      },
      "_Computar": {
         "description": "Model Computar",
         "properties": {
            "name": {
               "const": "Computar",
               "default": "Computar",
               "enum": [
                  "Computar"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Computar",
         "type": "object"
      },
      "_Conoptics": {
         "description": "Model Conoptics",
         "properties": {
            "name": {
               "const": "Conoptics",
               "default": "Conoptics",
               "enum": [
                  "Conoptics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Conoptics",
         "type": "object"
      },
      "_Custom": {
         "description": "Model Custom",
         "properties": {
            "name": {
               "const": "Custom",
               "default": "Custom",
               "enum": [
                  "Custom"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Custom",
         "type": "object"
      },
      "_Dodotronic": {
         "description": "Model Dodotronic",
         "properties": {
            "name": {
               "const": "Dodotronic",
               "default": "Dodotronic",
               "enum": [
                  "Dodotronic"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Dodotronic",
         "type": "object"
      },
      "_Doric": {
         "description": "Model Doric",
         "properties": {
            "name": {
               "const": "Doric",
               "default": "Doric",
               "enum": [
                  "Doric"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "059n53q30",
               "default": "059n53q30",
               "enum": [
                  "059n53q30"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Doric",
         "type": "object"
      },
      "_Ealing": {
         "description": "Model Ealing",
         "properties": {
            "name": {
               "const": "Ealing",
               "default": "Ealing",
               "enum": [
                  "Ealing"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Ealing",
         "type": "object"
      },
      "_Edmund_Optics": {
         "description": "Model Edmund Optics",
         "properties": {
            "name": {
               "const": "Edmund Optics",
               "default": "Edmund Optics",
               "enum": [
                  "Edmund Optics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01j1gwp17",
               "default": "01j1gwp17",
               "enum": [
                  "01j1gwp17"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Edmund_Optics",
         "type": "object"
      },
      "_Emapa": {
         "additionalProperties": false,
         "description": "Model EMAPA",
         "properties": {
            "name": {
               "const": "Edinburgh Mouse Atlas Project",
               "default": "Edinburgh Mouse Atlas Project",
               "enum": [
                  "Edinburgh Mouse Atlas Project"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "EMAPA",
               "default": "EMAPA",
               "enum": [
                  "EMAPA"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Emapa",
         "type": "object"
      },
      "_Emg": {
         "additionalProperties": false,
         "description": "Model EMG",
         "properties": {
            "name": {
               "const": "Electromyography",
               "default": "Electromyography",
               "enum": [
                  "Electromyography"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "EMG",
               "default": "EMG",
               "enum": [
                  "EMG"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Emg",
         "type": "object"
      },
      "_Emory_University": {
         "description": "Model Emory University",
         "properties": {
            "name": {
               "const": "Emory University",
               "default": "Emory University",
               "enum": [
                  "Emory University"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Emory",
               "default": "Emory",
               "enum": [
                  "Emory"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03czfpz43",
               "default": "03czfpz43",
               "enum": [
                  "03czfpz43"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Emory_University",
         "type": "object"
      },
      "_Euresys": {
         "description": "Model Euresys",
         "properties": {
            "name": {
               "const": "Euresys",
               "default": "Euresys",
               "enum": [
                  "Euresys"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Euresys",
         "type": "object"
      },
      "_Exaspim": {
         "description": "Model exaSPIM",
         "properties": {
            "name": {
               "const": "ExaSPIM platform",
               "default": "ExaSPIM platform",
               "enum": [
                  "ExaSPIM platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "exaSPIM",
               "default": "exaSPIM",
               "enum": [
                  "exaSPIM"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Exaspim",
         "type": "object"
      },
      "_Fib": {
         "additionalProperties": false,
         "description": "Model fib",
         "properties": {
            "name": {
               "const": "Fiber photometry",
               "default": "Fiber photometry",
               "enum": [
                  "Fiber photometry"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "fib",
               "default": "fib",
               "enum": [
                  "fib"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Fib",
         "type": "object"
      },
      "_Fip": {
         "description": "Model FIP",
         "properties": {
            "name": {
               "const": "Frame-projected independent-fiber photometry platform",
               "default": "Frame-projected independent-fiber photometry platform",
               "enum": [
                  "Frame-projected independent-fiber photometry platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "FIP",
               "default": "FIP",
               "enum": [
                  "FIP"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Fip",
         "type": "object"
      },
      "_Fmost": {
         "additionalProperties": false,
         "description": "Model fMOST",
         "properties": {
            "name": {
               "const": "Fluorescence micro-optical sectioning tomography",
               "default": "Fluorescence micro-optical sectioning tomography",
               "enum": [
                  "Fluorescence micro-optical sectioning tomography"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "fMOST",
               "default": "fMOST",
               "enum": [
                  "fMOST"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Fmost",
         "type": "object"
      },
      "_Fujinon": {
         "description": "Model Fujinon",
         "properties": {
            "name": {
               "const": "Fujinon",
               "default": "Fujinon",
               "enum": [
                  "Fujinon"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Fujinon",
         "type": "object"
      },
      "_Hamamatsu": {
         "description": "Model Hamamatsu",
         "properties": {
            "name": {
               "const": "Hamamatsu",
               "default": "Hamamatsu",
               "enum": [
                  "Hamamatsu"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03natb733",
               "default": "03natb733",
               "enum": [
                  "03natb733"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Hamamatsu",
         "type": "object"
      },
      "_Hamilton": {
         "description": "Model Hamilton",
         "properties": {
            "name": {
               "const": "Hamilton",
               "default": "Hamilton",
               "enum": [
                  "Hamilton"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Hamilton",
         "type": "object"
      },
      "_Hcr": {
         "description": "Model HCR",
         "properties": {
            "name": {
               "const": "Hybridization chain reaction platform",
               "default": "Hybridization chain reaction platform",
               "enum": [
                  "Hybridization chain reaction platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "HCR",
               "default": "HCR",
               "enum": [
                  "HCR"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Hcr",
         "type": "object"
      },
      "_Hsfp": {
         "description": "Model HSFP",
         "properties": {
            "name": {
               "const": "Hyperspectral fiber photometry platform",
               "default": "Hyperspectral fiber photometry platform",
               "enum": [
                  "Hyperspectral fiber photometry platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "HSFP",
               "default": "HSFP",
               "enum": [
                  "HSFP"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Hsfp",
         "type": "object"
      },
      "_Huazhong_University_Of_Science_And_Technology": {
         "description": "Model Huazhong University of Science and Technology",
         "properties": {
            "name": {
               "const": "Huazhong University of Science and Technology",
               "default": "Huazhong University of Science and Technology",
               "enum": [
                  "Huazhong University of Science and Technology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "HUST",
               "default": "HUST",
               "enum": [
                  "HUST"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00p991c53",
               "default": "00p991c53",
               "enum": [
                  "00p991c53"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Huazhong_University_Of_Science_And_Technology",
         "type": "object"
      },
      "_Icephys": {
         "additionalProperties": false,
         "description": "Model icephys",
         "properties": {
            "name": {
               "const": "Intracellular electrophysiology",
               "default": "Intracellular electrophysiology",
               "enum": [
                  "Intracellular electrophysiology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "icephys",
               "default": "icephys",
               "enum": [
                  "icephys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Icephys",
         "type": "object"
      },
      "_Infinity_Photo_Optical": {
         "description": "Model Infinity Photo-Optical",
         "properties": {
            "name": {
               "const": "Infinity Photo-Optical",
               "default": "Infinity Photo-Optical",
               "enum": [
                  "Infinity Photo-Optical"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Infinity_Photo_Optical",
         "type": "object"
      },
      "_Integrated_Dna_Technologies": {
         "description": "Model Integrated DNA Technologies",
         "properties": {
            "name": {
               "const": "Integrated DNA Technologies",
               "default": "Integrated DNA Technologies",
               "enum": [
                  "Integrated DNA Technologies"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "IDT",
               "default": "IDT",
               "enum": [
                  "IDT"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "009jvpf03",
               "default": "009jvpf03",
               "enum": [
                  "009jvpf03"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Integrated_Dna_Technologies",
         "type": "object"
      },
      "_Interuniversity_Microelectronics_Center": {
         "description": "Model Interuniversity Microelectronics Center",
         "properties": {
            "name": {
               "const": "Interuniversity Microelectronics Center",
               "default": "Interuniversity Microelectronics Center",
               "enum": [
                  "Interuniversity Microelectronics Center"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "IMEC",
               "default": "IMEC",
               "enum": [
                  "IMEC"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02kcbn207",
               "default": "02kcbn207",
               "enum": [
                  "02kcbn207"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Interuniversity_Microelectronics_Center",
         "type": "object"
      },
      "_Invitrogen": {
         "description": "Model Invitrogen",
         "properties": {
            "name": {
               "const": "Invitrogen",
               "default": "Invitrogen",
               "enum": [
                  "Invitrogen"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03x1ewr52",
               "default": "03x1ewr52",
               "enum": [
                  "03x1ewr52"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Invitrogen",
         "type": "object"
      },
      "_Ir_Robot_Co": {
         "description": "Model IR Robot Co",
         "properties": {
            "name": {
               "const": "IR Robot Co",
               "default": "IR Robot Co",
               "enum": [
                  "IR Robot Co"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Ir_Robot_Co",
         "type": "object"
      },
      "_Isl_Products_International": {
         "description": "Model ISL Products International",
         "properties": {
            "name": {
               "const": "ISL Products International",
               "default": "ISL Products International",
               "enum": [
                  "ISL Products International"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISL",
               "default": "ISL",
               "enum": [
                  "ISL"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Isl_Products_International",
         "type": "object"
      },
      "_Jackson_Laboratory": {
         "description": "Model Jackson Laboratory",
         "properties": {
            "name": {
               "const": "Jackson Laboratory",
               "default": "Jackson Laboratory",
               "enum": [
                  "Jackson Laboratory"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "JAX",
               "default": "JAX",
               "enum": [
                  "JAX"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "021sy4w91",
               "default": "021sy4w91",
               "enum": [
                  "021sy4w91"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Jackson_Laboratory",
         "type": "object"
      },
      "_Janelia_Research_Campus": {
         "description": "Model Janelia Research Campus",
         "properties": {
            "name": {
               "const": "Janelia Research Campus",
               "default": "Janelia Research Campus",
               "enum": [
                  "Janelia Research Campus"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Janelia",
               "default": "Janelia",
               "enum": [
                  "Janelia"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "013sk6x84",
               "default": "013sk6x84",
               "enum": [
                  "013sk6x84"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Janelia_Research_Campus",
         "type": "object"
      },
      "_Julabo": {
         "description": "Model Julabo",
         "properties": {
            "name": {
               "const": "Julabo",
               "default": "Julabo",
               "enum": [
                  "Julabo"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Julabo",
         "type": "object"
      },
      "_Leica": {
         "description": "Model Leica",
         "properties": {
            "name": {
               "const": "Leica",
               "default": "Leica",
               "enum": [
                  "Leica"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Leica",
         "type": "object"
      },
      "_Lg": {
         "description": "Model LG",
         "properties": {
            "name": {
               "const": "LG",
               "default": "LG",
               "enum": [
                  "LG"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02b948n83",
               "default": "02b948n83",
               "enum": [
                  "02b948n83"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Lg",
         "type": "object"
      },
      "_Lifecanvas": {
         "description": "Model LifeCanvas",
         "properties": {
            "name": {
               "const": "LifeCanvas",
               "default": "LifeCanvas",
               "enum": [
                  "LifeCanvas"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Lifecanvas",
         "type": "object"
      },
      "_Lumen_Dynamics": {
         "description": "Model Lumen Dynamics",
         "properties": {
            "name": {
               "const": "Lumen Dynamics",
               "default": "Lumen Dynamics",
               "enum": [
                  "Lumen Dynamics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Lumen_Dynamics",
         "type": "object"
      },
      "_Mbf_Bioscience": {
         "description": "Model MBF Bioscience",
         "properties": {
            "name": {
               "const": "MBF Bioscience",
               "default": "MBF Bioscience",
               "enum": [
                  "MBF Bioscience"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MBF",
               "default": "MBF",
               "enum": [
                  "MBF"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02zynam48",
               "default": "02zynam48",
               "enum": [
                  "02zynam48"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Mbf_Bioscience",
         "type": "object"
      },
      "_Meadowlark_Optics": {
         "description": "Model Meadowlark Optics",
         "properties": {
            "name": {
               "const": "Meadowlark Optics",
               "default": "Meadowlark Optics",
               "enum": [
                  "Meadowlark Optics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00n8qbq54",
               "default": "00n8qbq54",
               "enum": [
                  "00n8qbq54"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Meadowlark_Optics",
         "type": "object"
      },
      "_Mesospim": {
         "description": "Model mesoSPIM",
         "properties": {
            "name": {
               "const": "MesoSPIM platform",
               "default": "MesoSPIM platform",
               "enum": [
                  "MesoSPIM platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "mesoSPIM",
               "default": "mesoSPIM",
               "enum": [
                  "mesoSPIM"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Mesospim",
         "type": "object"
      },
      "_Mgi": {
         "additionalProperties": false,
         "description": "Model MGI",
         "properties": {
            "name": {
               "const": "Mouse Genome Informatics",
               "default": "Mouse Genome Informatics",
               "enum": [
                  "Mouse Genome Informatics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MGI",
               "default": "MGI",
               "enum": [
                  "MGI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Mgi",
         "type": "object"
      },
      "_Michael_J_Fox_Foundation_For_Parkinson_S_Research": {
         "description": "Model Michael J. Fox Foundation for Parkinson's Research",
         "properties": {
            "name": {
               "const": "Michael J. Fox Foundation for Parkinson's Research",
               "default": "Michael J. Fox Foundation for Parkinson's Research",
               "enum": [
                  "Michael J. Fox Foundation for Parkinson's Research"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MJFF",
               "default": "MJFF",
               "enum": [
                  "MJFF"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03arq3225",
               "default": "03arq3225",
               "enum": [
                  "03arq3225"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Michael_J_Fox_Foundation_For_Parkinson_S_Research",
         "type": "object"
      },
      "_Midwest_Optical_Systems_Inc_": {
         "description": "Model Midwest Optical Systems, Inc.",
         "properties": {
            "name": {
               "const": "Midwest Optical Systems, Inc.",
               "default": "Midwest Optical Systems, Inc.",
               "enum": [
                  "Midwest Optical Systems, Inc."
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MidOpt",
               "default": "MidOpt",
               "enum": [
                  "MidOpt"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Midwest_Optical_Systems_Inc_",
         "type": "object"
      },
      "_Mitutuyo": {
         "description": "Model Mitutuyo",
         "properties": {
            "name": {
               "const": "Mitutuyo",
               "default": "Mitutuyo",
               "enum": [
                  "Mitutuyo"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Mitutuyo",
         "type": "object"
      },
      "_Mks_Newport": {
         "description": "Model MKS Newport",
         "properties": {
            "name": {
               "const": "MKS Newport",
               "default": "MKS Newport",
               "enum": [
                  "MKS Newport"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00k17f049",
               "default": "00k17f049",
               "enum": [
                  "00k17f049"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Mks_Newport",
         "type": "object"
      },
      "_Motor_Observatory": {
         "description": "Model motor-observatory",
         "properties": {
            "name": {
               "const": "Motor observatory platform",
               "default": "Motor observatory platform",
               "enum": [
                  "Motor observatory platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "motor-observatory",
               "default": "motor-observatory",
               "enum": [
                  "motor-observatory"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Motor_Observatory",
         "type": "object"
      },
      "_Mpi": {
         "description": "Model MPI",
         "properties": {
            "name": {
               "const": "MPI",
               "default": "MPI",
               "enum": [
                  "MPI"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MPI",
               "default": "MPI",
               "enum": [
                  "MPI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Mpi",
         "type": "object"
      },
      "_Multiplane_Ophys": {
         "description": "Model multiplane-ophys",
         "properties": {
            "name": {
               "const": "Multiplane optical physiology platform",
               "default": "Multiplane optical physiology platform",
               "enum": [
                  "Multiplane optical physiology platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "multiplane-ophys",
               "default": "multiplane-ophys",
               "enum": [
                  "multiplane-ophys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Multiplane_Ophys",
         "type": "object"
      },
      "_National_Center_For_Complementary_And_Integrative_Health": {
         "description": "Model National Center for Complementary and Integrative Health",
         "properties": {
            "name": {
               "const": "National Center for Complementary and Integrative Health",
               "default": "National Center for Complementary and Integrative Health",
               "enum": [
                  "National Center for Complementary and Integrative Health"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NCCIH",
               "default": "NCCIH",
               "enum": [
                  "NCCIH"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00190t495",
               "default": "00190t495",
               "enum": [
                  "00190t495"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_National_Center_For_Complementary_And_Integrative_Health",
         "type": "object"
      },
      "_National_Institute_Of_Mental_Health": {
         "description": "Model National Institute of Mental Health",
         "properties": {
            "name": {
               "const": "National Institute of Mental Health",
               "default": "National Institute of Mental Health",
               "enum": [
                  "National Institute of Mental Health"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NIMH",
               "default": "NIMH",
               "enum": [
                  "NIMH"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "04xeg9z08",
               "default": "04xeg9z08",
               "enum": [
                  "04xeg9z08"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_National_Institute_Of_Mental_Health",
         "type": "object"
      },
      "_National_Institute_Of_Neurological_Disorders_And_Stroke": {
         "description": "Model National Institute of Neurological Disorders and Stroke",
         "properties": {
            "name": {
               "const": "National Institute of Neurological Disorders and Stroke",
               "default": "National Institute of Neurological Disorders and Stroke",
               "enum": [
                  "National Institute of Neurological Disorders and Stroke"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NINDS",
               "default": "NINDS",
               "enum": [
                  "NINDS"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01s5ya894",
               "default": "01s5ya894",
               "enum": [
                  "01s5ya894"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_National_Institute_Of_Neurological_Disorders_And_Stroke",
         "type": "object"
      },
      "_National_Instruments": {
         "description": "Model National Instruments",
         "properties": {
            "name": {
               "const": "National Instruments",
               "default": "National Instruments",
               "enum": [
                  "National Instruments"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "026exqw73",
               "default": "026exqw73",
               "enum": [
                  "026exqw73"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_National_Instruments",
         "type": "object"
      },
      "_Navitar": {
         "description": "Model Navitar",
         "properties": {
            "name": {
               "const": "Navitar",
               "default": "Navitar",
               "enum": [
                  "Navitar"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Navitar",
         "type": "object"
      },
      "_Ncbi": {
         "additionalProperties": false,
         "description": "Model NCBI",
         "properties": {
            "name": {
               "const": "National Center for Biotechnology Information",
               "default": "National Center for Biotechnology Information",
               "enum": [
                  "National Center for Biotechnology Information"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NCBI",
               "default": "NCBI",
               "enum": [
                  "NCBI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Ncbi",
         "type": "object"
      },
      "_Neurophotometrics": {
         "description": "Model Neurophotometrics",
         "properties": {
            "name": {
               "const": "Neurophotometrics",
               "default": "Neurophotometrics",
               "enum": [
                  "Neurophotometrics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Neurophotometrics",
         "type": "object"
      },
      "_New_Scale_Technologies": {
         "description": "Model New Scale Technologies",
         "properties": {
            "name": {
               "const": "New Scale Technologies",
               "default": "New Scale Technologies",
               "enum": [
                  "New Scale Technologies"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_New_Scale_Technologies",
         "type": "object"
      },
      "_New_York_University": {
         "description": "Model New York University",
         "properties": {
            "name": {
               "const": "New York University",
               "default": "New York University",
               "enum": [
                  "New York University"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NYU",
               "default": "NYU",
               "enum": [
                  "NYU"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "0190ak572",
               "default": "0190ak572",
               "enum": [
                  "0190ak572"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_New_York_University",
         "type": "object"
      },
      "_Nikon": {
         "description": "Model Nikon",
         "properties": {
            "name": {
               "const": "Nikon",
               "default": "Nikon",
               "enum": [
                  "Nikon"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "0280y9h11",
               "default": "0280y9h11",
               "enum": [
                  "0280y9h11"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Nikon",
         "type": "object"
      },
      "_Nresearch_Inc": {
         "description": "Model NResearch Inc",
         "properties": {
            "name": {
               "const": "NResearch Inc",
               "default": "NResearch Inc",
               "enum": [
                  "NResearch Inc"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Nresearch_Inc",
         "type": "object"
      },
      "_Olympus": {
         "description": "Model Olympus",
         "properties": {
            "name": {
               "const": "Olympus",
               "default": "Olympus",
               "enum": [
                  "Olympus"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02vcdte90",
               "default": "02vcdte90",
               "enum": [
                  "02vcdte90"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Olympus",
         "type": "object"
      },
      "_Open_Ephys_Production_Site": {
         "description": "Model Open Ephys Production Site",
         "properties": {
            "name": {
               "const": "Open Ephys Production Site",
               "default": "Open Ephys Production Site",
               "enum": [
                  "Open Ephys Production Site"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "OEPS",
               "default": "OEPS",
               "enum": [
                  "OEPS"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "007rkz355",
               "default": "007rkz355",
               "enum": [
                  "007rkz355"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Open_Ephys_Production_Site",
         "type": "object"
      },
      "_Optotune": {
         "description": "Model Optotune",
         "properties": {
            "name": {
               "const": "Optotune",
               "default": "Optotune",
               "enum": [
                  "Optotune"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Optotune",
         "type": "object"
      },
      "_Orcid": {
         "additionalProperties": false,
         "description": "Model ORCID",
         "properties": {
            "name": {
               "const": "Open Researcher and Contributor ID",
               "default": "Open Researcher and Contributor ID",
               "enum": [
                  "Open Researcher and Contributor ID"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ORCID",
               "default": "ORCID",
               "enum": [
                  "ORCID"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Orcid",
         "type": "object"
      },
      "_Other": {
         "description": "Model Other",
         "properties": {
            "name": {
               "const": "Other",
               "default": "Other",
               "enum": [
                  "Other"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Other",
         "type": "object"
      },
      "_Oxxius": {
         "description": "Model Oxxius",
         "properties": {
            "name": {
               "const": "Oxxius",
               "default": "Oxxius",
               "enum": [
                  "Oxxius"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Oxxius",
         "type": "object"
      },
      "_Pophys": {
         "additionalProperties": false,
         "description": "Model pophys",
         "properties": {
            "name": {
               "const": "Planar optical physiology",
               "default": "Planar optical physiology",
               "enum": [
                  "Planar optical physiology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "pophys",
               "default": "pophys",
               "enum": [
                  "pophys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Pophys",
         "type": "object"
      },
      "_Prizmatix": {
         "description": "Model Prizmatix",
         "properties": {
            "name": {
               "const": "Prizmatix",
               "default": "Prizmatix",
               "enum": [
                  "Prizmatix"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Prizmatix",
         "type": "object"
      },
      "_Quantifi": {
         "description": "Model Quantifi",
         "properties": {
            "name": {
               "const": "Quantifi",
               "default": "Quantifi",
               "enum": [
                  "Quantifi"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Quantifi",
         "type": "object"
      },
      "_Raspberry_Pi": {
         "description": "Model Raspberry Pi",
         "properties": {
            "name": {
               "const": "Raspberry Pi",
               "default": "Raspberry Pi",
               "enum": [
                  "Raspberry Pi"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Raspberry_Pi",
         "type": "object"
      },
      "_Ror": {
         "additionalProperties": false,
         "description": "Model ROR",
         "properties": {
            "name": {
               "const": "Research Organization Registry",
               "default": "Research Organization Registry",
               "enum": [
                  "Research Organization Registry"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ROR",
               "default": "ROR",
               "enum": [
                  "ROR"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Ror",
         "type": "object"
      },
      "_Rrid": {
         "additionalProperties": false,
         "description": "Model RRID",
         "properties": {
            "name": {
               "const": "Research Resource Identifiers",
               "default": "Research Resource Identifiers",
               "enum": [
                  "Research Resource Identifiers"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "RRID",
               "default": "RRID",
               "enum": [
                  "RRID"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Rrid",
         "type": "object"
      },
      "_Schneider_Kreuznach": {
         "description": "Model Schneider-Kreuznach",
         "properties": {
            "name": {
               "const": "Schneider-Kreuznach",
               "default": "Schneider-Kreuznach",
               "enum": [
                  "Schneider-Kreuznach"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Schneider_Kreuznach",
         "type": "object"
      },
      "_Second_Order_Effects": {
         "description": "Model Second Order Effects",
         "properties": {
            "name": {
               "const": "Second Order Effects",
               "default": "Second Order Effects",
               "enum": [
                  "Second Order Effects"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Second_Order_Effects",
         "type": "object"
      },
      "_Semrock": {
         "description": "Model Semrock",
         "properties": {
            "name": {
               "const": "Semrock",
               "default": "Semrock",
               "enum": [
                  "Semrock"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Semrock",
         "type": "object"
      },
      "_Sicgen": {
         "description": "Model SICGEN",
         "properties": {
            "name": {
               "const": "SICGEN",
               "default": "SICGEN",
               "enum": [
                  "SICGEN"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Sicgen",
         "type": "object"
      },
      "_Sigma_Aldrich": {
         "description": "Model Sigma-Aldrich",
         "properties": {
            "name": {
               "const": "Sigma-Aldrich",
               "default": "Sigma-Aldrich",
               "enum": [
                  "Sigma-Aldrich"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Sigma_Aldrich",
         "type": "object"
      },
      "_Simons_Foundation": {
         "description": "Model Simons Foundation",
         "properties": {
            "name": {
               "const": "Simons Foundation",
               "default": "Simons Foundation",
               "enum": [
                  "Simons Foundation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01cmst727",
               "default": "01cmst727",
               "enum": [
                  "01cmst727"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Simons_Foundation",
         "type": "object"
      },
      "_Single_Plane_Ophys": {
         "description": "Model single-plane-ophys",
         "properties": {
            "name": {
               "const": "Single-plane optical physiology platform",
               "default": "Single-plane optical physiology platform",
               "enum": [
                  "Single-plane optical physiology platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "single-plane-ophys",
               "default": "single-plane-ophys",
               "enum": [
                  "single-plane-ophys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Single_Plane_Ophys",
         "type": "object"
      },
      "_Slap": {
         "additionalProperties": false,
         "description": "Model slap",
         "properties": {
            "name": {
               "const": "Scanned line projection imaging",
               "default": "Scanned line projection imaging",
               "enum": [
                  "Scanned line projection imaging"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "slap",
               "default": "slap",
               "enum": [
                  "slap"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Slap",
         "type": "object"
      },
      "_Slap2": {
         "description": "Model SLAP2",
         "properties": {
            "name": {
               "const": "SLAP2 platform",
               "default": "SLAP2 platform",
               "enum": [
                  "SLAP2 platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "SLAP2",
               "default": "SLAP2",
               "enum": [
                  "SLAP2"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Slap2",
         "type": "object"
      },
      "_Smartspim": {
         "description": "Model SmartSPIM",
         "properties": {
            "name": {
               "const": "SmartSPIM platform",
               "default": "SmartSPIM platform",
               "enum": [
                  "SmartSPIM platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "SmartSPIM",
               "default": "SmartSPIM",
               "enum": [
                  "SmartSPIM"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Smartspim",
         "type": "object"
      },
      "_Spim": {
         "additionalProperties": false,
         "description": "Model SPIM",
         "properties": {
            "name": {
               "const": "Selective plane illumination microscopy",
               "default": "Selective plane illumination microscopy",
               "enum": [
                  "Selective plane illumination microscopy"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "SPIM",
               "default": "SPIM",
               "enum": [
                  "SPIM"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Spim",
         "type": "object"
      },
      "_Spinnaker": {
         "description": "Model Spinnaker",
         "properties": {
            "name": {
               "const": "Spinnaker",
               "default": "Spinnaker",
               "enum": [
                  "Spinnaker"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Spinnaker",
         "type": "object"
      },
      "_Tamron": {
         "description": "Model Tamron",
         "properties": {
            "name": {
               "const": "Tamron",
               "default": "Tamron",
               "enum": [
                  "Tamron"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Tamron",
         "type": "object"
      },
      "_Technical_Manufacturing_Corporation": {
         "description": "Model Technical Manufacturing Corporation",
         "properties": {
            "name": {
               "const": "Technical Manufacturing Corporation",
               "default": "Technical Manufacturing Corporation",
               "enum": [
                  "Technical Manufacturing Corporation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "TMC",
               "default": "TMC",
               "enum": [
                  "TMC"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Technical_Manufacturing_Corporation",
         "type": "object"
      },
      "_Teledyne_Flir": {
         "description": "Model Teledyne FLIR",
         "properties": {
            "name": {
               "const": "Teledyne FLIR",
               "default": "Teledyne FLIR",
               "enum": [
                  "Teledyne FLIR"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "FLIR",
               "default": "FLIR",
               "enum": [
                  "FLIR"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01j1gwp17",
               "default": "01j1gwp17",
               "enum": [
                  "01j1gwp17"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Teledyne_Flir",
         "type": "object"
      },
      "_Templeton_World_Charity_Foundation": {
         "description": "Model Templeton World Charity Foundation",
         "properties": {
            "name": {
               "const": "Templeton World Charity Foundation",
               "default": "Templeton World Charity Foundation",
               "enum": [
                  "Templeton World Charity Foundation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "TWCF",
               "default": "TWCF",
               "enum": [
                  "TWCF"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00x0z1472",
               "default": "00x0z1472",
               "enum": [
                  "00x0z1472"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Templeton_World_Charity_Foundation",
         "type": "object"
      },
      "_The_Imaging_Source": {
         "description": "Model The Imaging Source",
         "properties": {
            "name": {
               "const": "The Imaging Source",
               "default": "The Imaging Source",
               "enum": [
                  "The Imaging Source"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_The_Imaging_Source",
         "type": "object"
      },
      "_The_Lee_Company": {
         "description": "Model The Lee Company",
         "properties": {
            "name": {
               "const": "The Lee Company",
               "default": "The Lee Company",
               "enum": [
                  "The Lee Company"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_The_Lee_Company",
         "type": "object"
      },
      "_Thermo_Fisher_Scientific": {
         "description": "Model Thermo Fisher Scientific",
         "properties": {
            "name": {
               "const": "Thermo Fisher Scientific",
               "default": "Thermo Fisher Scientific",
               "enum": [
                  "Thermo Fisher Scientific"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03x1ewr52",
               "default": "03x1ewr52",
               "enum": [
                  "03x1ewr52"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Thermo_Fisher_Scientific",
         "type": "object"
      },
      "_Thorlabs": {
         "description": "Model Thorlabs",
         "properties": {
            "name": {
               "const": "Thorlabs",
               "default": "Thorlabs",
               "enum": [
                  "Thorlabs"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "04gsnvb07",
               "default": "04gsnvb07",
               "enum": [
                  "04gsnvb07"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Thorlabs",
         "type": "object"
      },
      "_Tymphany": {
         "description": "Model Tymphany",
         "properties": {
            "name": {
               "const": "Tymphany",
               "default": "Tymphany",
               "enum": [
                  "Tymphany"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Tymphany",
         "type": "object"
      },
      "_Vieworks": {
         "description": "Model Vieworks",
         "properties": {
            "name": {
               "const": "Vieworks",
               "default": "Vieworks",
               "enum": [
                  "Vieworks"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Vieworks",
         "type": "object"
      },
      "_Vortran": {
         "description": "Model Vortran",
         "properties": {
            "name": {
               "const": "Vortran",
               "default": "Vortran",
               "enum": [
                  "Vortran"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "default": null,
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "_Vortran",
         "type": "object"
      },
      "aind_data_schema_models__modalities___Behavior": {
         "additionalProperties": false,
         "description": "Model behavior",
         "properties": {
            "name": {
               "const": "Behavior",
               "default": "Behavior",
               "enum": [
                  "Behavior"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior",
               "default": "behavior",
               "enum": [
                  "behavior"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Behavior",
         "type": "object"
      },
      "aind_data_schema_models__modalities___Confocal": {
         "additionalProperties": false,
         "description": "Model confocal",
         "properties": {
            "name": {
               "const": "Confocal microscopy",
               "default": "Confocal microscopy",
               "enum": [
                  "Confocal microscopy"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "confocal",
               "default": "confocal",
               "enum": [
                  "confocal"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Confocal",
         "type": "object"
      },
      "aind_data_schema_models__modalities___Ecephys": {
         "additionalProperties": false,
         "description": "Model ecephys",
         "properties": {
            "name": {
               "const": "Extracellular electrophysiology",
               "default": "Extracellular electrophysiology",
               "enum": [
                  "Extracellular electrophysiology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ecephys",
               "default": "ecephys",
               "enum": [
                  "ecephys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Ecephys",
         "type": "object"
      },
      "aind_data_schema_models__modalities___Isi": {
         "additionalProperties": false,
         "description": "Model ISI",
         "properties": {
            "name": {
               "const": "Intrinsic signal imaging",
               "default": "Intrinsic signal imaging",
               "enum": [
                  "Intrinsic signal imaging"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISI",
               "default": "ISI",
               "enum": [
                  "ISI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Isi",
         "type": "object"
      },
      "aind_data_schema_models__modalities___Merfish": {
         "additionalProperties": false,
         "description": "Model merfish",
         "properties": {
            "name": {
               "const": "Multiplexed error-robust fluorescence in situ hybridization",
               "default": "Multiplexed error-robust fluorescence in situ hybridization",
               "enum": [
                  "Multiplexed error-robust fluorescence in situ hybridization"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "merfish",
               "default": "merfish",
               "enum": [
                  "merfish"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Merfish",
         "type": "object"
      },
      "aind_data_schema_models__modalities___Mri": {
         "additionalProperties": false,
         "description": "Model MRI",
         "properties": {
            "name": {
               "const": "Magnetic resonance imaging",
               "default": "Magnetic resonance imaging",
               "enum": [
                  "Magnetic resonance imaging"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MRI",
               "default": "MRI",
               "enum": [
                  "MRI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Mri",
         "type": "object"
      },
      "aind_data_schema_models__organizations___Addgene": {
         "description": "Model Addgene",
         "properties": {
            "name": {
               "const": "Addgene",
               "default": "Addgene",
               "enum": [
                  "Addgene"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "ADDGENE": "#/$defs/aind_data_schema_models__registries___Addgene",
                     "EMAPA": "#/$defs/_Emapa",
                     "MGI": "#/$defs/_Mgi",
                     "NCBI": "#/$defs/_Ncbi",
                     "ORCID": "#/$defs/_Orcid",
                     "ROR": "#/$defs/_Ror",
                     "RRID": "#/$defs/_Rrid"
                  },
                  "propertyName": "abbreviation"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/aind_data_schema_models__registries___Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Emapa"
                  },
                  {
                     "$ref": "#/$defs/_Mgi"
                  },
                  {
                     "$ref": "#/$defs/_Ncbi"
                  },
                  {
                     "$ref": "#/$defs/_Orcid"
                  },
                  {
                     "$ref": "#/$defs/_Ror"
                  },
                  {
                     "$ref": "#/$defs/_Rrid"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01nn1pw54",
               "default": "01nn1pw54",
               "enum": [
                  "01nn1pw54"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "_Addgene",
         "type": "object"
      },
      "aind_data_schema_models__platforms___Behavior": {
         "description": "Model behavior",
         "properties": {
            "name": {
               "const": "Behavior platform",
               "default": "Behavior platform",
               "enum": [
                  "Behavior platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior",
               "default": "behavior",
               "enum": [
                  "behavior"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Behavior",
         "type": "object"
      },
      "aind_data_schema_models__platforms___Confocal": {
         "description": "Model confocal",
         "properties": {
            "name": {
               "const": "Confocal microscopy platform",
               "default": "Confocal microscopy platform",
               "enum": [
                  "Confocal microscopy platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "confocal",
               "default": "confocal",
               "enum": [
                  "confocal"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Confocal",
         "type": "object"
      },
      "aind_data_schema_models__platforms___Ecephys": {
         "description": "Model ecephys",
         "properties": {
            "name": {
               "const": "Electrophysiology platform",
               "default": "Electrophysiology platform",
               "enum": [
                  "Electrophysiology platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ecephys",
               "default": "ecephys",
               "enum": [
                  "ecephys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Ecephys",
         "type": "object"
      },
      "aind_data_schema_models__platforms___Isi": {
         "description": "Model ISI",
         "properties": {
            "name": {
               "const": "Intrinsic signal imaging platform",
               "default": "Intrinsic signal imaging platform",
               "enum": [
                  "Intrinsic signal imaging platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISI",
               "default": "ISI",
               "enum": [
                  "ISI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Isi",
         "type": "object"
      },
      "aind_data_schema_models__platforms___Merfish": {
         "description": "Model MERFISH",
         "properties": {
            "name": {
               "const": "MERFISH platform",
               "default": "MERFISH platform",
               "enum": [
                  "MERFISH platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MERFISH",
               "default": "MERFISH",
               "enum": [
                  "MERFISH"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Merfish",
         "type": "object"
      },
      "aind_data_schema_models__platforms___Mri": {
         "description": "Model MRI",
         "properties": {
            "name": {
               "const": "Magnetic resonance imaging platform",
               "default": "Magnetic resonance imaging platform",
               "enum": [
                  "Magnetic resonance imaging platform"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MRI",
               "default": "MRI",
               "enum": [
                  "MRI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Mri",
         "type": "object"
      },
      "aind_data_schema_models__registries___Addgene": {
         "additionalProperties": false,
         "description": "Model ADDGENE",
         "properties": {
            "name": {
               "const": "Addgene",
               "default": "Addgene",
               "enum": [
                  "Addgene"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ADDGENE",
               "default": "ADDGENE",
               "enum": [
                  "ADDGENE"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Addgene",
         "type": "object"
      },
      "aind_metadata_mapper__bergamo__models__JobSettings": {
         "additionalProperties": true,
         "description": "Data that needs to be input by user. Can be pulled from env vars with\nBERGAMO prefix or set explicitly.",
         "properties": {
            "job_settings_name": {
               "const": "Bergamo",
               "default": "Bergamo",
               "enum": [
                  "Bergamo"
               ],
               "title": "Job Settings Name",
               "type": "string"
            },
            "input_source": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "items": {
                        "format": "path",
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location or locations of data sources to parse for metadata.",
               "title": "Input Source"
            },
            "output_directory": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location to metadata file data to. None to return object.",
               "title": "Output Directory"
            },
            "user_settings_config_file": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optionally pull settings from a local config file.",
               "title": "User Settings Config File"
            },
            "experimenter_full_name": {
               "items": {
                  "type": "string"
               },
               "title": "Experimenter Full Name",
               "type": "array"
            },
            "subject_id": {
               "title": "Subject Id",
               "type": "string"
            },
            "imaging_laser_wavelength": {
               "title": "Imaging Laser Wavelength",
               "type": "integer"
            },
            "fov_imaging_depth": {
               "title": "Fov Imaging Depth",
               "type": "integer"
            },
            "fov_targeted_structure": {
               "title": "Fov Targeted Structure",
               "type": "string"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "title": "Notes"
            },
            "mouse_platform_name": {
               "default": "Standard Mouse Tube",
               "title": "Mouse Platform Name",
               "type": "string"
            },
            "active_mouse_platform": {
               "default": false,
               "title": "Active Mouse Platform",
               "type": "boolean"
            },
            "session_type": {
               "default": "BCI",
               "title": "Session Type",
               "type": "string"
            },
            "iacuc_protocol": {
               "default": "2109",
               "title": "Iacuc Protocol",
               "type": "string"
            },
            "rig_id": {
               "default": "442 Bergamo 2p photostim",
               "title": "Rig Id",
               "type": "string"
            },
            "behavior_camera_names": {
               "default": [
                  "Side Face Camera",
                  "Bottom Face Camera"
               ],
               "items": {
                  "type": "string"
               },
               "title": "Behavior Camera Names",
               "type": "array"
            },
            "ch1_filter_names": {
               "default": [
                  "Green emission filter",
                  "Emission dichroic"
               ],
               "items": {
                  "type": "string"
               },
               "title": "Ch1 Filter Names",
               "type": "array"
            },
            "ch1_detector_name": {
               "default": "Green PMT",
               "title": "Ch1 Detector Name",
               "type": "string"
            },
            "ch1_daq_name": {
               "default": "PXI",
               "title": "Ch1 Daq Name",
               "type": "string"
            },
            "ch2_filter_names": {
               "default": [
                  "Red emission filter",
                  "Emission dichroic"
               ],
               "items": {
                  "type": "string"
               },
               "title": "Ch2 Filter Names",
               "type": "array"
            },
            "ch2_detector_name": {
               "default": "Red PMT",
               "title": "Ch2 Detector Name",
               "type": "string"
            },
            "ch2_daq_name": {
               "default": "PXI",
               "title": "Ch2 Daq Name",
               "type": "string"
            },
            "imaging_laser_name": {
               "default": "Chameleon Laser",
               "title": "Imaging Laser Name",
               "type": "string"
            },
            "photostim_laser_name": {
               "default": "Monaco Laser",
               "title": "Photostim Laser Name",
               "type": "string"
            },
            "stimulus_device_names": {
               "default": [
                  "speaker",
                  "lickport"
               ],
               "items": {
                  "type": "string"
               },
               "title": "Stimulus Device Names",
               "type": "array"
            },
            "photostim_laser_wavelength": {
               "default": 1040,
               "title": "Photostim Laser Wavelength",
               "type": "integer"
            },
            "fov_coordinate_ml": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "default": "1.5",
               "title": "Fov Coordinate Ml"
            },
            "fov_coordinate_ap": {
               "default": "1.5",
               "title": "Fov Coordinate Ap",
               "type": "number"
            },
            "fov_reference": {
               "default": "Bregma",
               "title": "Fov Reference",
               "type": "string"
            },
            "starting_lickport_position": {
               "default": [
                  0,
                  -6,
                  0
               ],
               "items": {
                  "type": "number"
               },
               "title": "Starting Lickport Position",
               "type": "array"
            },
            "behavior_task_name": {
               "default": "single neuron BCI conditioning",
               "title": "Behavior Task Name",
               "type": "string"
            },
            "hit_rate_trials_0_10": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Hit Rate Trials 0 10"
            },
            "hit_rate_trials_20_40": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Hit Rate Trials 20 40"
            },
            "total_hits": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Total Hits"
            },
            "average_hit_rate": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Average Hit Rate"
            },
            "trial_num": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Trial Num"
            },
            "timezone": {
               "default": "US/Pacific",
               "title": "Timezone",
               "type": "string"
            }
         },
         "required": [
            "experimenter_full_name",
            "subject_id",
            "imaging_laser_wavelength",
            "fov_imaging_depth",
            "fov_targeted_structure",
            "notes"
         ],
         "title": "JobSettings",
         "type": "object"
      },
      "aind_metadata_mapper__bruker__models__JobSettings": {
         "additionalProperties": true,
         "description": "Data that needs to be input by user.",
         "properties": {
            "job_settings_name": {
               "const": "Bruker",
               "default": "Bruker",
               "enum": [
                  "Bruker"
               ],
               "title": "Job Settings Name",
               "type": "string"
            },
            "input_source": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "items": {
                        "format": "path",
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location or locations of data sources to parse for metadata.",
               "title": "Input Source"
            },
            "output_directory": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location to metadata file data to. None to return object.",
               "title": "Output Directory"
            },
            "user_settings_config_file": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optionally pull settings from a local config file.",
               "title": "User Settings Config File"
            },
            "data_path": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Deprecated, use input_source instead.",
               "title": "Data Path"
            },
            "experimenter_full_name": {
               "items": {
                  "type": "string"
               },
               "title": "Experimenter Full Name",
               "type": "array"
            },
            "protocol_id": {
               "default": "",
               "description": "Protocol ID",
               "title": "Protocol Id",
               "type": "string"
            },
            "collection_tz": {
               "default": "America/Los_Angeles",
               "description": "Timezone string of the collection site",
               "title": "Collection Tz",
               "type": "string"
            },
            "session_type": {
               "title": "Session Type",
               "type": "string"
            },
            "primary_scan_number": {
               "title": "Primary Scan Number",
               "type": "integer"
            },
            "setup_scan_number": {
               "title": "Setup Scan Number",
               "type": "integer"
            },
            "scanner_name": {
               "title": "Scanner Name",
               "type": "string"
            },
            "scan_location": {
               "title": "Scan Location",
               "type": "string"
            },
            "magnetic_strength": {
               "title": "Magnetic Strength",
               "type": "integer"
            },
            "subject_id": {
               "title": "Subject Id",
               "type": "string"
            },
            "iacuc_protocol": {
               "title": "Iacuc Protocol",
               "type": "string"
            },
            "session_notes": {
               "title": "Session Notes",
               "type": "string"
            }
         },
         "required": [
            "experimenter_full_name",
            "session_type",
            "primary_scan_number",
            "setup_scan_number",
            "scanner_name",
            "scan_location",
            "magnetic_strength",
            "subject_id",
            "iacuc_protocol",
            "session_notes"
         ],
         "title": "JobSettings",
         "type": "object"
      },
      "aind_metadata_mapper__fip__models__JobSettings": {
         "additionalProperties": true,
         "description": "Data that needs to be input by user.",
         "properties": {
            "job_settings_name": {
               "const": "FIP",
               "default": "FIP",
               "enum": [
                  "FIP"
               ],
               "title": "Job Settings Name",
               "type": "string"
            },
            "input_source": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "items": {
                        "format": "path",
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location or locations of data sources to parse for metadata.",
               "title": "Input Source"
            },
            "output_directory": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location to metadata file data to. None to return object.",
               "title": "Output Directory"
            },
            "user_settings_config_file": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optionally pull settings from a local config file.",
               "title": "User Settings Config File"
            },
            "string_to_parse": {
               "title": "String To Parse",
               "type": "string"
            },
            "experimenter_full_name": {
               "items": {
                  "type": "string"
               },
               "title": "Experimenter Full Name",
               "type": "array"
            },
            "session_start_time": {
               "format": "date-time",
               "title": "Session Start Time",
               "type": "string"
            },
            "notes": {
               "title": "Notes",
               "type": "string"
            },
            "labtracks_id": {
               "title": "Labtracks Id",
               "type": "string"
            },
            "iacuc_protocol": {
               "title": "Iacuc Protocol",
               "type": "string"
            },
            "light_source_list": {
               "items": {
                  "type": "object"
               },
               "title": "Light Source List",
               "type": "array"
            },
            "detector_list": {
               "items": {
                  "type": "object"
               },
               "title": "Detector List",
               "type": "array"
            },
            "fiber_connections_list": {
               "items": {
                  "type": "object"
               },
               "title": "Fiber Connections List",
               "type": "array"
            },
            "rig_id": {
               "default": "ophys_rig",
               "title": "Rig Id",
               "type": "string"
            },
            "session_type": {
               "default": "Foraging_Photometry",
               "title": "Session Type",
               "type": "string"
            },
            "mouse_platform_name": {
               "default": "Disc",
               "title": "Mouse Platform Name",
               "type": "string"
            },
            "active_mouse_platform": {
               "default": false,
               "title": "Active Mouse Platform",
               "type": "boolean"
            }
         },
         "required": [
            "string_to_parse",
            "experimenter_full_name",
            "session_start_time",
            "notes",
            "labtracks_id",
            "iacuc_protocol",
            "light_source_list",
            "detector_list",
            "fiber_connections_list"
         ],
         "title": "JobSettings",
         "type": "object"
      },
      "aind_metadata_mapper__mesoscope__models__JobSettings": {
         "additionalProperties": true,
         "description": "Data to be entered by the user.",
         "properties": {
            "job_settings_name": {
               "const": "Mesoscope",
               "default": "Mesoscope",
               "enum": [
                  "Mesoscope"
               ],
               "title": "Job Settings Name",
               "type": "string"
            },
            "input_source": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "items": {
                        "format": "path",
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location or locations of data sources to parse for metadata.",
               "title": "Input Source"
            },
            "output_directory": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location to metadata file data to. None to return object.",
               "title": "Output Directory"
            },
            "user_settings_config_file": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optionally pull settings from a local config file.",
               "title": "User Settings Config File"
            },
            "behavior_source": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Behavior Source"
            },
            "session_start_time": {
               "format": "date-time",
               "title": "Session Start Time",
               "type": "string"
            },
            "session_end_time": {
               "format": "date-time",
               "title": "Session End Time",
               "type": "string"
            },
            "subject_id": {
               "title": "Subject Id",
               "type": "string"
            },
            "project": {
               "title": "Project",
               "type": "string"
            },
            "iacuc_protocol": {
               "default": "2115",
               "title": "Iacuc Protocol",
               "type": "string"
            },
            "magnification": {
               "default": "16x",
               "title": "Magnification",
               "type": "string"
            },
            "fov_coordinate_ml": {
               "default": 1.5,
               "title": "Fov Coordinate Ml",
               "type": "number"
            },
            "fov_coordinate_ap": {
               "default": 1.5,
               "title": "Fov Coordinate Ap",
               "type": "number"
            },
            "fov_reference": {
               "default": "Bregma",
               "title": "Fov Reference",
               "type": "string"
            },
            "experimenter_full_name": {
               "items": {
                  "type": "string"
               },
               "title": "Full name of the experimenter",
               "type": "array"
            },
            "mouse_platform_name": {
               "default": "disc",
               "title": "Mouse Platform Name",
               "type": "string"
            }
         },
         "required": [
            "behavior_source",
            "session_start_time",
            "session_end_time",
            "subject_id",
            "project",
            "experimenter_full_name"
         ],
         "title": "JobSettings",
         "type": "object"
      },
      "aind_metadata_mapper__models__JobSettings": {
         "additionalProperties": true,
         "description": "Fields needed to gather all metadata",
         "properties": {
            "job_settings_name": {
               "const": "GatherMetadata",
               "default": "GatherMetadata",
               "enum": [
                  "GatherMetadata"
               ],
               "title": "Job Settings Name",
               "type": "string"
            },
            "metadata_service_domain": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Metadata Service Domain"
            },
            "subject_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SubjectSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "session_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SessionSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "acquisition_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/AcquisitionSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "raw_data_description_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/RawDataDescriptionSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "procedures_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/ProceduresSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "processing_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/ProcessingSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "metadata_settings": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/MetadataSettings"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "directory_to_write_to": {
               "format": "path",
               "title": "Directory To Write To",
               "type": "string"
            },
            "metadata_dir": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optional path where user defined metadata files might be",
               "title": "Metadata Dir"
            },
            "metadata_dir_force": {
               "default": false,
               "description": "Whether to override the user defined files in metadata_dir with those pulled from metadata service",
               "title": "Metadata Dir Force",
               "type": "boolean"
            }
         },
         "required": [
            "directory_to_write_to"
         ],
         "title": "JobSettings",
         "type": "object"
      },
      "aind_metadata_mapper__smartspim__models__JobSettings": {
         "additionalProperties": true,
         "description": "Data to be entered by the user.",
         "properties": {
            "job_settings_name": {
               "const": "SmartSPIM",
               "default": "SmartSPIM",
               "enum": [
                  "SmartSPIM"
               ],
               "title": "Job Settings Name",
               "type": "string"
            },
            "input_source": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "items": {
                        "format": "path",
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location or locations of data sources to parse for metadata.",
               "title": "Input Source"
            },
            "output_directory": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Location to metadata file data to. None to return object.",
               "title": "Output Directory"
            },
            "user_settings_config_file": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Optionally pull settings from a local config file.",
               "title": "User Settings Config File"
            },
            "raw_dataset_path": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Deprecated, use input_source instead.",
               "title": "Raw Dataset Path"
            },
            "subject_id": {
               "title": "Subject Id",
               "type": "string"
            },
            "asi_filename": {
               "default": "derivatives/ASI_logging.txt",
               "title": "Asi Filename",
               "type": "string"
            },
            "mdata_filename_json": {
               "default": "derivatives/metadata.json",
               "title": "Mdata Filename Json",
               "type": "string"
            },
            "processing_manifest_path": {
               "default": "derivatives/processing_manifest.json",
               "title": "Processing Manifest Path",
               "type": "string"
            }
         },
         "required": [
            "subject_id"
         ],
         "title": "JobSettings",
         "type": "object"
      }
   },
   "additionalProperties": true,
   "description": "Configuration for the basic upload job",
   "properties": {
      "user_email": {
         "anyOf": [
            {
               "format": "email",
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Optional email address to receive job status notifications",
         "title": "User Email"
      },
      "email_notification_types": {
         "anyOf": [
            {
               "items": {
                  "$ref": "#/$defs/EmailNotificationType"
               },
               "type": "array",
               "uniqueItems": true
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Types of job statuses to receive email notifications about",
         "title": "Email Notification Types"
      },
      "project_name": {
         "description": "Name of project",
         "title": "Project Name",
         "type": "string"
      },
      "input_data_mount": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "(deprecated - set codeocean_configs)",
         "title": "Input Data Mount"
      },
      "process_capsule_id": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "(deprecated - set codeocean_configs)",
         "title": "Process Capsule ID"
      },
      "s3_bucket": {
         "default": "private",
         "description": "Bucket where data will be uploaded. If null, will upload to default bucket. Uploading to scratch will be deprecated in future versions.",
         "enum": [
            "private",
            "open",
            "scratch"
         ],
         "title": "S3 Bucket",
         "type": "string"
      },
      "platform": {
         "description": "Platform",
         "discriminator": {
            "mapping": {
               "Behavior platform": "#/$defs/aind_data_schema_models__platforms___Behavior",
               "Confocal microscopy platform": "#/$defs/aind_data_schema_models__platforms___Confocal",
               "Electrophysiology platform": "#/$defs/aind_data_schema_models__platforms___Ecephys",
               "ExaSPIM platform": "#/$defs/_Exaspim",
               "Frame-projected independent-fiber photometry platform": "#/$defs/_Fip",
               "Hybridization chain reaction platform": "#/$defs/_Hcr",
               "Hyperspectral fiber photometry platform": "#/$defs/_Hsfp",
               "Intrinsic signal imaging platform": "#/$defs/aind_data_schema_models__platforms___Isi",
               "MERFISH platform": "#/$defs/aind_data_schema_models__platforms___Merfish",
               "Magnetic resonance imaging platform": "#/$defs/aind_data_schema_models__platforms___Mri",
               "MesoSPIM platform": "#/$defs/_Mesospim",
               "Motor observatory platform": "#/$defs/_Motor_Observatory",
               "Multiplane optical physiology platform": "#/$defs/_Multiplane_Ophys",
               "SLAP2 platform": "#/$defs/_Slap2",
               "Single-plane optical physiology platform": "#/$defs/_Single_Plane_Ophys",
               "SmartSPIM platform": "#/$defs/_Smartspim"
            },
            "propertyName": "name"
         },
         "oneOf": [
            {
               "$ref": "#/$defs/aind_data_schema_models__platforms___Behavior"
            },
            {
               "$ref": "#/$defs/aind_data_schema_models__platforms___Confocal"
            },
            {
               "$ref": "#/$defs/aind_data_schema_models__platforms___Ecephys"
            },
            {
               "$ref": "#/$defs/_Exaspim"
            },
            {
               "$ref": "#/$defs/_Fip"
            },
            {
               "$ref": "#/$defs/_Hcr"
            },
            {
               "$ref": "#/$defs/_Hsfp"
            },
            {
               "$ref": "#/$defs/aind_data_schema_models__platforms___Isi"
            },
            {
               "$ref": "#/$defs/aind_data_schema_models__platforms___Merfish"
            },
            {
               "$ref": "#/$defs/aind_data_schema_models__platforms___Mri"
            },
            {
               "$ref": "#/$defs/_Mesospim"
            },
            {
               "$ref": "#/$defs/_Motor_Observatory"
            },
            {
               "$ref": "#/$defs/_Multiplane_Ophys"
            },
            {
               "$ref": "#/$defs/_Slap2"
            },
            {
               "$ref": "#/$defs/_Single_Plane_Ophys"
            },
            {
               "$ref": "#/$defs/_Smartspim"
            }
         ],
         "title": "Platform"
      },
      "modalities": {
         "description": "Data collection modalities and their directory location",
         "items": {
            "$ref": "#/$defs/ModalityConfigs"
         },
         "minItems": 1,
         "title": "Modalities",
         "type": "array"
      },
      "subject_id": {
         "description": "Subject ID",
         "title": "Subject ID",
         "type": "string"
      },
      "acq_datetime": {
         "description": "Datetime data was acquired",
         "format": "date-time",
         "title": "Acquisition Datetime",
         "type": "string"
      },
      "metadata_dir": {
         "anyOf": [
            {
               "format": "path",
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Directory of metadata",
         "title": "Metadata Directory"
      },
      "metadata_dir_force": {
         "default": false,
         "description": "Whether to override metadata from service with metadata in optional metadata directory",
         "title": "Metadata Directory Force",
         "type": "boolean"
      },
      "force_cloud_sync": {
         "default": false,
         "description": "Force syncing of data folder even if location exists in cloud",
         "title": "Force Cloud Sync",
         "type": "boolean"
      },
      "metadata_configs": {
         "anyOf": [
            {
               "$ref": "#/$defs/aind_metadata_mapper__models__JobSettings"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Settings for gather metadata job",
         "title": "Metadata Configs"
      },
      "trigger_capsule_configs": {
         "anyOf": [
            {
               "$ref": "#/$defs/TriggerConfigModel"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "(deprecated. Use codeocean_configs) Settings for the codeocean trigger capsule. Validators will set defaults.",
         "title": "Trigger Capsule Configs (deprecated. Use codeocean_configs)"
      },
      "codeocean_configs": {
         "$ref": "#/$defs/CodeOceanPipelineMonitorConfigs",
         "default": {
            "capture_results_to_default_bucket": true,
            "job_type": null,
            "pipeline_monitor_capsule_id": null,
            "pipeline_monitor_capsule_settings": null,
            "register_data_settings": {
               "custom_metadata": {
                  "data level": "raw"
               },
               "data_asset_ids": null,
               "description": null,
               "mount": "",
               "name": "",
               "results_info": null,
               "source": null,
               "tags": [
                  "raw"
               ],
               "target": null
            }
         },
         "description": "User can pass custom fields. Otherwise, transfer service will handle setting default values at runtime."
      }
   },
   "required": [
      "project_name",
      "platform",
      "modalities",
      "subject_id",
      "acq_datetime"
   ],
   "title": "BasicUploadJobConfigs",
   "type": "object"
}